var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.195,1,2.457]],["body/controllers/AppController.html",[0,1.775,1,3.649,2,1.354,3,0.215,4,0.188,5,0.188,6,3.462,7,0.534,8,1.68,9,4.54,10,4.053,11,5.376,12,1.431,13,0.021,14,2.551,15,4.54,16,4.03,17,5.314,18,0.65,19,4.053,20,1.281,21,0.975,22,0.534,23,0.975,24,5.929,25,1.281,26,0.423,27,0.778,28,2.875,29,2.193,30,1.03,31,3.073,32,3.45,33,3.462,34,4.053,35,0.215,36,0.198,37,1.602,38,1.513,39,2.193,40,4.053,41,1.919,42,3.462,43,4.053,44,4.053,45,1.281,46,4.053,47,0.015,48,0.015]],["title/modules/AppModule.html",[49,1.131,50,2.457]],["body/modules/AppModule.html",[1,3.704,2,1.566,3,0.179,4,0.156,5,0.156,13,0.021,26,0.459,27,0.647,32,3.694,33,2.877,35,0.179,36,0.165,47,0.013,48,0.013,49,1.482,50,4.976,51,1.412,52,1.854,53,2.877,54,2.877,55,2.877,56,3.996,57,3.996,58,3.996,59,3.996,60,2.661,61,3.996,62,3.996,63,2.221,64,1.595,65,1.595,66,3.368,67,2.369,68,2.537,69,3.368,70,3.368,71,3.368,72,3.368,73,3.368,74,3.368,75,3.368,76,3.368]],["title/injectables/AppService.html",[32,2.082,77,0.961]],["body/injectables/AppService.html",[3,0.24,4,0.209,5,0.209,7,0.596,8,1.802,9,4.87,13,0.021,15,4.87,18,0.725,20,1.429,21,1.088,22,0.596,23,1.088,25,1.429,26,0.304,27,0.868,32,3.317,35,0.24,36,0.221,42,4.87,45,1.429,47,0.016,48,0.016,77,1.531,78,2.012,79,3.861,80,5.7,81,1.375,82,4.52,83,5.7,84,3.861,85,3.861,86,4.52]],["title/controllers/AuthController.html",[0,1.195,87,2.457]],["body/controllers/AuthController.html",[0,1.115,2,1.115,3,0.177,4,0.155,5,0.155,7,0.44,8,1.474,12,1.645,13,0.021,18,0.747,20,1.474,21,1.122,22,0.614,23,1.122,25,1.474,26,0.446,27,0.641,28,2.905,29,1.807,30,0.849,35,0.177,36,0.163,37,1.32,38,1.247,39,2.522,45,1.474,47,0.013,48,0.013,87,3.201,88,2.853,89,1.943,90,3.339,91,3.99,92,4.661,93,2.853,94,3.986,95,3.339,96,4.661,97,4.661,98,3.535,99,3.339,100,2.522,101,3.339,102,2.778,103,3.339,104,2.522,105,3.339,106,3.339,107,1.943,108,2.293,109,2.293,110,2.712,111,2.293,112,2.293,113,1.486,114,3.201,115,2.532,116,3.124,117,2.853,118,2.102,119,2.853,120,2.853,121,2.853,122,2.532,123,3.339,124,3.339,125,3.339,126,3.339,127,3.339,128,3.339,129,3.339,130,2.293,131,2.853,132,3.339]],["title/modules/AuthModule.html",[49,1.131,56,2.252]],["body/modules/AuthModule.html",[2,1.702,3,0.202,4,0.176,5,0.176,13,0.021,26,0.452,27,0.73,35,0.202,36,0.186,47,0.015,48,0.015,49,1.611,51,1.594,52,2.014,56,4.403,60,2.76,63,2.413,64,1.801,65,1.801,67,2.575,68,2.757,87,3.945,113,1.693,116,3.832,117,3.249,133,3.249,134,3.249,135,3.804,136,4.146,137,3.804,138,3.804,139,2.213,140,3.804,141,2.884,142,3.804,143,2.612,144,2.612,145,2.612,146,2.058,147,3.804,148,3.804,149,3.249,150,3.804,151,3.804,152,3.804]],["title/injectables/AuthService.html",[77,0.961,116,2.082]],["body/injectables/AuthService.html",[3,0.165,4,0.144,5,0.144,7,0.41,8,1.401,13,0.021,18,0.711,20,1.401,21,1.489,22,0.584,23,1.067,25,0.983,26,0.416,27,0.597,35,0.165,36,0.152,38,1.655,41,2.666,45,0.983,47,0.013,48,0.013,77,1.19,78,1.384,91,3.044,93,3.787,94,3.895,98,2.358,100,2.398,102,2.165,116,2.579,118,1.957,119,2.657,120,2.657,121,2.657,141,2.358,153,2.657,154,2.794,155,2.24,156,1.682,157,2.226,158,6.367,159,3.11,160,2.24,161,3.11,162,2.657,163,1.682,164,3.361,165,3.361,166,1.957,167,2.794,168,3.787,169,2.794,170,2.61,171,4.432,172,4.432,173,3.361,174,4.432,175,3.044,176,2.358,177,2.79,178,3.11,179,3.11,180,3.11,181,3.11,182,2.657,183,2.657,184,4.432,185,3.11,186,3.361,187,1.229,188,3.11]],["title/classes/CreateFavoriteDto.html",[36,0.175,189,2.082]],["body/classes/CreateFavoriteDto.html",[3,0.194,4,0.169,5,0.169,7,0.481,12,1.749,13,0.021,18,0.794,22,0.653,26,0.333,30,0.928,35,0.194,36,0.242,47,0.014,48,0.014,81,1.228,177,2.298,189,2.883,190,1.035,191,4.807,192,2.768,193,1.655,194,4.333,195,5.626,196,4.234,197,4.234,198,3.118,199,5.155,200,3.265,201,4.955,202,4.955,203,4.955,204,4.955,205,4.955,206,4.955,207,4.955,208,4.955,209,4.955,210,4.955,211,3.65,212,3.118,213,1.405,214,3.403,215,4.955,216,4.955,217,4.955,218,4.955,219,4.955,220,4.955,221,4.955,222,4.955,223,4.955,224,3.65,225,3.044,226,3.758,227,1.844,228,1.85]],["title/classes/CreateGameDto.html",[36,0.175,229,2.082]],["body/classes/CreateGameDto.html",[3,0.131,4,0.114,5,0.114,7,0.324,12,2.149,13,0.021,16,2.828,18,0.976,22,0.802,26,0.251,30,0.625,35,0.131,36,0.182,47,0.011,48,0.011,81,1.332,177,1.548,190,0.697,193,1.246,196,3.186,197,3.186,198,2.101,200,3.682,225,3.373,226,1.865,227,1.243,228,2.412,229,2.17,230,5.326,231,3.116,232,1.865,233,3.094,234,3.094,235,1.888,236,3.094,237,2.277,238,3.094,239,2.836,240,3.094,241,3.73,242,2.459,243,3.73,244,4.296,245,3.73,246,3.73,247,3.186,248,2.459,249,3.73,250,3.73,251,3.73,252,3.73,253,3.73,254,3.73,255,2.459,256,2.828,257,3.73,258,3.73,259,3.73,260,2.459,261,4.296,262,3.73,263,3.73,264,3.453,265,3.186,266,3.813,267,2.459,268,2.17,269,3.73,270,3.73,271,3.73,272,2.459,273,3.73,274,3.186,275,2.459,276,3.73,277,3.73,278,3.186,279,2.459,280,4.505,281,3.581,282,3.417]],["title/classes/CreateGenreDto.html",[36,0.175,283,2.082]],["body/classes/CreateGenreDto.html",[3,0.245,4,0.214,5,0.214,7,0.607,12,1.627,13,0.021,18,0.739,21,1.516,22,0.607,26,0.388,30,1.172,35,0.245,36,0.282,47,0.017,48,0.017,81,1.174,190,1.307,193,1.927,200,3.122,225,3.122,227,2.329,228,1.721,231,2.568,240,3.165,281,3.632,283,3.357,284,4.929,285,3.495,286,4.376,287,5.77,288,4.609]],["title/classes/CreateProfileDto.html",[36,0.175,289,2.082]],["body/classes/CreateProfileDto.html",[3,0.193,4,0.169,5,0.169,7,0.479,12,1.983,13,0.021,18,0.9,22,0.74,26,0.332,30,0.925,35,0.193,36,0.242,47,0.014,48,0.014,81,1.322,104,3.261,190,1.032,193,1.652,200,3.517,212,3.109,213,1.402,214,4.464,225,3.261,226,3.75,227,1.839,228,2.097,235,2.354,237,2.839,240,2.499,256,3.75,264,3.396,281,3.113,282,3.75,289,2.877,290,5.149,291,2.76,292,5.617,293,3.109,294,4.945,295,4.945,296,3.639,297,3.75,298,4.945,299,3.639,300,4.945,301,4.945,302,4.945,303,4.945,304,4.945,305,3.639]],["title/classes/CreateUserDto.html",[36,0.175,306,2.082]],["body/classes/CreateUserDto.html",[3,0.158,4,0.138,5,0.138,7,0.391,12,2.063,13,0.021,16,3.251,18,0.937,21,1.211,22,0.77,26,0.288,30,0.755,35,0.158,36,0.21,47,0.012,48,0.012,81,1.308,91,2.944,104,3.478,166,3.168,173,4.619,175,3.456,183,3.662,190,0.842,193,1.432,200,3.478,214,2.944,225,3.295,227,1.5,228,2.183,235,2.109,240,2.038,256,3.251,264,2.944,268,2.494,281,3.168,282,3.251,293,2.536,297,3.251,306,2.494,307,5.204,308,2.251,309,5.032,310,2.536,311,4.287,312,4.708,313,2.968,314,4.287,315,4.287,316,4.287,317,2.968,318,3.662,319,2.968,320,4.287,321,4.287,322,4.287,323,2.494,324,2.968,325,4.287,326,2.968,327,2.968,328,4.287,329,4.287,330,4.287,331,4.287,332,2.968,333,4.287,334,2.968,335,4.287,336,2.968,337,2.968,338,2.968,339,2.968,340,2.968]],["title/classes/Favorite.html",[36,0.175,341,2.457]],["body/classes/Favorite.html",[3,0.221,4,0.192,5,0.192,7,0.547,13,0.021,18,1.056,22,0.868,23,1.71,26,0.363,35,0.221,36,0.203,47,0.015,48,0.015,81,1.098,190,1.177,193,1.803,194,4.12,213,1.701,231,2.67,341,3.708,342,3.548,343,3.491,344,3.652,345,3.491,346,4.362,347,4.153,348,4.153,349,4.153,350,4.153,351,4.153,352,2.416,353,4.153]],["title/controllers/FavoriteController.html",[0,1.195,354,2.457]],["body/controllers/FavoriteController.html",[0,1.172,2,1.172,3,0.186,4,0.163,5,0.163,7,0.462,8,1.525,12,1.703,13,0.021,18,0.773,20,1.525,21,1.161,22,0.636,23,1.161,25,1.525,26,0.418,27,0.674,28,2.982,29,1.898,30,0.892,35,0.186,36,0.172,37,1.387,38,1.31,39,2.61,45,1.525,47,0.014,48,0.014,81,1.121,89,2.041,107,2.041,110,2.806,187,1.387,189,3.741,199,5.071,213,1.683,264,3.312,341,3.312,354,3.312,355,2.997,356,1.525,357,2.147,358,2.997,359,2.208,360,3.036,361,4.121,362,3.508,363,1.562,364,2.208,365,3.312,366,4.823,367,2.806,368,3.508,369,2.208,370,2.208,371,3.207,372,2.997,373,1.562,374,2.661,375,3.508,376,3.508,377,3.508,378,2.208,379,3.508,380,2.208,381,2.208,382,3.508]],["title/modules/FavoriteModule.html",[49,1.131,57,2.252]],["body/modules/FavoriteModule.html",[2,1.854,3,0.23,4,0.201,5,0.201,13,0.021,26,0.434,27,0.833,35,0.23,36,0.212,47,0.016,48,0.016,49,1.755,51,1.818,52,2.195,57,4.425,60,2.862,63,2.63,64,2.054,65,2.054,67,2.806,68,3.004,139,2.523,354,4.206,371,3.973,372,3.705,383,3.705,384,4.337,385,3.705,386,4.337,387,4.337]],["title/injectables/FavoriteService.html",[77,0.961,371,2.082]],["body/injectables/FavoriteService.html",[3,0.147,4,0.128,5,0.128,7,0.365,8,1.29,13,0.022,18,0.855,20,1.687,21,1.284,22,0.703,23,1.284,25,1.53,26,0.359,27,0.532,35,0.147,36,0.136,37,1.096,38,1.035,41,2.292,45,1.29,47,0.012,48,0.012,77,1.095,78,1.234,81,0.984,155,1.401,156,1.5,157,2.11,160,2.445,163,1.5,169,1.5,170,1.401,176,4.313,177,4.27,189,3.309,194,3.323,213,1.686,228,1.035,234,2.801,235,2.028,237,2.697,239,1.745,344,2.618,352,1.613,356,1.29,357,1.815,358,3.485,363,1.815,371,2.373,373,1.234,374,2.102,388,2.368,389,2.567,390,2.772,391,2.772,392,2.772,393,2.567,394,3.359,395,2.772,396,2.567,397,2.567,398,2.567,399,2.772,400,3.093,401,2.772,402,2.772,403,2.772,404,2.772,405,1.745,406,1.745,407,1.745,408,2.567,409,1.745,410,1.745,411,1.745,412,1.745,413,1.745,414,1.745,415,2.772,416,2.772]],["title/classes/Game.html",[36,0.175,231,1.592]],["body/classes/Game.html",[3,0.194,4,0.169,5,0.169,7,0.481,13,0.021,18,1.101,22,0.905,23,1.749,26,0.245,35,0.194,36,0.178,47,0.014,48,0.014,81,1.436,190,1.035,193,1.655,213,1.595,228,2.101,231,2.206,233,3.863,234,3.863,235,2.358,236,3.863,237,2.843,238,3.863,239,3.542,261,5.155,417,3.118,418,3.65,419,3.65,420,2.843,421,3.65,422,3.65,423,3.65,424,3.65,425,3.65,426,3.65,427,3.65,428,3.65]],["title/controllers/GameController.html",[0,1.195,429,2.457]],["body/controllers/GameController.html",[0,0.806,2,0.806,3,0.128,4,0.112,5,0.112,7,0.318,8,1.163,12,1.892,13,0.021,14,1.519,18,0.859,20,1.575,21,1.199,22,0.656,23,1.199,25,1.695,26,0.395,27,0.464,28,3.177,29,1.306,30,0.614,35,0.128,36,0.118,39,3.055,45,1.575,47,0.011,48,0.011,81,1.262,89,1.404,100,3.055,107,2.139,108,1.658,109,1.658,110,2.139,111,1.658,112,1.658,113,1.074,114,2.525,130,1.658,155,1.22,165,1.831,187,1.761,194,2.525,213,1.794,229,2.898,231,2.902,286,2.789,356,1.163,357,1.637,359,1.519,360,2.315,361,3.805,363,1.074,364,1.519,367,2.898,369,1.519,370,1.519,373,1.074,378,1.519,380,1.519,381,1.519,429,2.525,430,2.062,431,2.517,432,1.858,433,1.658,434,4.157,435,2.414,436,3.81,437,1.22,438,1.831,439,2.525,440,2.414,441,2.414,442,3.677,443,2.525,444,2.525,445,3.677,446,2.414,447,3.677,448,2.414,449,1.22,450,3.42,451,1.658,452,2.789,453,2.414,454,2.592,455,2.062,456,2.062,457,1.519,458,2.414,459,2.414,460,2.414,461,2.414,462,2.414,463,2.414,464,1.658,465,1.658,466,2.414,467,1.658,468,1.831,469,1.658,470,2.414,471,2.414,472,2.414,473,2.414]],["title/modules/GameModule.html",[49,1.131,58,2.252]],["body/modules/GameModule.html",[2,1.816,3,0.223,4,0.195,5,0.195,13,0.021,26,0.444,27,0.806,35,0.223,36,0.205,47,0.016,48,0.016,49,1.719,51,1.759,52,2.149,58,4.396,60,2.837,63,2.575,64,1.988,65,1.988,67,2.747,68,2.941,113,1.868,139,2.442,143,2.882,144,2.882,145,2.882,146,2.271,429,4.141,454,3.938,455,3.586,474,3.586,475,4.197,476,3.586,477,4.197,478,4.197]],["title/injectables/GameService.html",[77,0.961,454,2.082]],["body/injectables/GameService.html",[3,0.123,4,0.107,5,0.107,7,0.304,8,1.124,13,0.021,18,0.957,20,1.828,21,1.392,22,0.762,23,1.392,25,1.828,26,0.353,27,0.443,35,0.123,36,0.113,37,0.913,38,0.862,41,2.489,45,1.755,47,0.01,48,0.01,77,0.955,78,1.028,81,1.313,100,3.229,154,3.493,155,1.167,156,1.249,157,1.924,160,2.19,163,1.249,167,2.633,169,1.923,170,1.796,187,1.405,213,1.736,228,0.862,229,2.832,231,1.582,233,1.586,234,1.586,235,0.968,236,1.586,237,1.167,238,1.586,239,1.454,268,1.344,323,1.344,352,1.344,356,1.124,357,1.582,363,1.582,373,1.028,389,2.238,393,2.238,394,3.064,396,2.238,397,1.454,398,3.064,400,1.751,405,2.238,406,1.454,407,1.454,408,1.454,409,1.454,410,1.454,411,1.454,412,1.454,413,1.454,414,1.454,420,1.167,431,2.459,432,1.796,433,2.441,436,3.493,437,1.796,449,1.796,454,2.068,456,1.973,479,1.973,480,2.441,481,2.309,482,2.309,483,2.309,484,2.309,485,2.441,486,2.309,487,2.309,488,2.309,489,2.309,490,1.586,491,2.309,492,2.309,493,2.976,494,2.309,495,1.586,496,1.586,497,1.586,498,2.976,499,2.309,500,2.309,501,2.309,502,2.309,503,2.309,504,2.309,505,2.309,506,2.309,507,2.309,508,2.309,509,2.309,510,1.973,511,1.751,512,2.309,513,2.309]],["title/classes/Genre.html",[36,0.175,420,1.808]],["body/classes/Genre.html",[3,0.24,4,0.209,5,0.209,7,0.596,13,0.02,18,1.051,21,1.503,22,0.864,23,1.661,35,0.24,36,0.221,47,0.016,48,0.016,81,1.334,190,1.282,193,1.904,213,1.77,343,3.633,345,3.633,346,4.502,420,2.88,514,3.861,515,4.52,516,4.52,517,4.52,518,4.52]],["title/controllers/GenreController.html",[0,1.195,519,2.457]],["body/controllers/GenreController.html",[0,0.857,2,0.857,3,0.136,4,0.119,5,0.119,7,0.338,8,1.218,12,1.944,13,0.021,14,1.616,18,0.883,20,1.624,21,1.237,22,0.677,23,1.237,25,1.741,26,0.389,27,0.493,28,3.128,29,1.389,30,0.653,35,0.136,36,0.125,37,1.015,38,0.958,39,2.979,45,1.741,47,0.011,48,0.011,81,1.283,89,1.493,107,2.241,108,1.762,109,1.762,110,2.241,111,1.762,112,1.762,113,1.142,114,2.645,130,1.762,187,1.828,213,1.874,283,3.364,286,4.678,356,1.218,357,1.714,359,1.616,360,2.425,363,1.142,364,1.616,365,3.528,367,3.364,369,1.616,370,1.616,373,1.142,378,1.616,380,1.616,381,1.616,420,1.297,431,2.596,432,1.946,434,4.236,437,1.297,438,1.946,439,2.645,443,2.645,444,2.645,449,1.297,451,1.762,452,2.921,457,1.616,464,1.762,465,1.762,467,1.762,468,1.946,469,1.762,519,2.645,520,2.193,521,2.567,522,2.567,523,2.567,524,3.852,525,2.567,526,2.567,527,4.236,528,2.567,529,2.69,530,2.193,531,2.921,532,2.567,533,2.567,534,2.567,535,2.567,536,2.567,537,2.567,538,2.567]],["title/modules/GenreModule.html",[49,1.131,59,2.252]],["body/modules/GenreModule.html",[2,1.816,3,0.223,4,0.195,5,0.195,13,0.021,26,0.444,27,0.806,35,0.223,36,0.205,47,0.016,48,0.016,49,1.719,51,1.759,52,2.149,59,4.396,60,2.837,63,2.575,64,1.988,65,1.988,67,2.747,68,2.941,113,1.868,139,2.442,143,2.882,144,2.882,145,2.882,146,2.271,519,4.141,529,3.938,530,3.586,539,3.586,540,4.197,541,3.586,542,4.197,543,4.197]],["title/injectables/GenreService.html",[77,0.961,529,2.082]],["body/injectables/GenreService.html",[3,0.13,4,0.114,5,0.114,7,0.323,8,1.175,13,0.021,18,0.975,20,1.866,21,1.42,22,0.778,23,1.42,25,1.866,26,0.337,27,0.47,35,0.13,36,0.12,37,0.968,38,0.914,41,2.555,45,1.706,47,0.011,48,0.011,77,0.998,78,1.09,81,1.331,100,3.435,154,3.539,155,1.238,156,1.325,157,1.984,160,1.879,163,1.325,167,2.715,169,2.011,170,1.879,187,1.47,213,1.724,268,1.425,283,2.919,323,1.425,356,1.175,357,1.655,363,1.655,373,1.09,389,2.34,393,2.34,394,3.158,396,2.34,397,1.542,398,3.158,405,2.34,406,1.542,407,1.542,408,1.542,409,1.542,410,1.542,411,1.542,412,1.542,413,1.542,414,1.542,420,1.879,431,2.535,432,1.879,433,2.553,436,3.575,437,1.879,449,1.879,480,2.553,485,2.553,490,1.682,493,3.086,495,1.682,496,1.682,497,1.682,498,3.086,510,2.092,511,1.857,529,2.163,531,1.857,544,2.092,545,2.449,546,2.449,547,2.449,548,2.449,549,2.449,550,2.449,551,2.449,552,2.449,553,2.449,554,2.449,555,2.449,556,2.449,557,2.449,558,2.449]],["title/injectables/JwtStrategy.html",[77,0.961,136,2.252]],["body/injectables/JwtStrategy.html",[3,0.195,4,0.17,5,0.17,7,0.484,8,1.573,13,0.021,18,0.798,20,1.573,21,1.456,22,0.797,23,1.198,25,1.161,26,0.407,27,0.705,35,0.195,36,0.18,37,1.452,38,1.371,41,1.739,45,1.161,47,0.014,48,0.014,77,1.336,78,1.635,81,0.747,102,2.086,104,1.987,113,1.635,136,3.133,146,1.987,149,3.138,154,3.054,155,1.856,156,1.987,157,2.392,160,2.515,162,4.251,163,1.987,167,1.987,169,1.987,170,1.856,186,2.785,187,1.452,323,2.137,559,3.138,560,4.976,561,3.673,562,4.976,563,4.976,564,3.673,565,3.673,566,3.673,567,3.673,568,3.673,569,3.673,570,3.138,571,1.987,572,3.673,573,3.138,574,3.673,575,3.673,576,3.673,577,3.138,578,3.673,579,3.673,580,3.673,581,3.673,582,3.673]],["title/classes/LoginDto.html",[36,0.175,94,2.252]],["body/classes/LoginDto.html",[3,0.223,4,0.195,5,0.195,7,0.553,12,1.919,13,0.021,18,0.872,21,1.451,22,0.716,26,0.365,30,1.067,35,0.223,36,0.266,47,0.016,48,0.016,81,1.298,94,3.422,104,3.451,166,3.796,173,4.123,190,1.19,193,1.816,200,3.451,225,3.262,227,2.121,228,2.03,281,3.796,297,4.123,312,4.645,583,3.586,584,5.437,585,5.437,586,4.197,587,4.197,588,6.03]],["title/classes/LoginResponseDto.html",[36,0.175,118,2.252]],["body/classes/LoginResponseDto.html",[3,0.222,4,0.194,5,0.194,7,0.551,12,1.915,13,0.021,18,0.87,22,0.715,26,0.365,30,1.063,35,0.222,36,0.204,47,0.016,48,0.016,81,1.103,91,3.725,98,4.565,102,2.834,104,2.935,115,3.172,118,3.414,131,4.634,146,2.935,190,1.186,193,1.812,200,2.935,225,3.257,228,2.025,310,4.634,367,3.156,589,5.143,590,3.573,591,5.424,592,5.424,593,5.424,594,4.182,595,5.424,596,4.182]],["title/modules/PrismaModule.html",[49,1.131,60,1.499]],["body/modules/PrismaModule.html",[3,0.243,4,0.212,5,0.212,13,0.021,26,0.386,27,0.878,35,0.243,36,0.224,47,0.016,48,0.016,49,1.815,51,1.917,52,2.27,60,2.944,63,2.719,64,2.166,65,2.166,67,2.902,157,2.885,597,3.907,598,3.907,599,3.907,600,4.573,601,5.742,602,4.573]],["title/injectables/PrismaService.html",[77,0.961,157,1.414]],["body/injectables/PrismaService.html",[3,0.221,4,0.193,5,0.193,7,0.549,8,1.711,13,0.021,18,0.868,20,1.318,21,1.003,22,0.549,23,1.003,25,1.711,26,0.364,27,0.8,35,0.221,36,0.204,47,0.016,48,0.016,77,1.453,78,1.855,154,3.721,157,2.139,167,2.928,352,2.425,571,2.928,603,3.56,604,6.01,605,5.412,606,6.756,607,5.412,608,6.361,609,4.168,610,3.56,611,4.168,612,4.168,613,4.168,614,4.168,615,4.168]],["title/classes/Profile.html",[36,0.175,344,1.936]],["body/classes/Profile.html",[3,0.216,4,0.188,5,0.188,7,0.536,13,0.021,18,1.076,22,0.884,23,1.728,26,0.273,35,0.216,36,0.199,47,0.015,48,0.015,81,1.365,102,2.813,115,3.084,190,1.153,193,1.779,213,1.684,235,2.489,237,3.001,343,3.455,344,2.881,345,3.455,346,4.327,616,3.474,617,4.067,618,4.067,619,4.067,620,4.067,621,4.067,622,4.067]],["title/controllers/ProfileController.html",[0,1.195,623,2.457]],["body/controllers/ProfileController.html",[0,0.878,2,0.878,3,0.14,4,0.122,5,0.122,7,0.346,8,1.24,12,1.964,13,0.021,14,1.655,18,0.892,20,1.644,21,1.252,22,0.685,23,1.252,25,1.759,26,0.374,27,0.505,28,3.156,29,1.423,30,0.669,35,0.14,36,0.129,37,1.04,38,0.982,39,3.01,45,1.759,47,0.011,48,0.011,81,1.292,89,1.53,107,2.282,108,1.806,109,1.806,110,2.282,187,1.855,213,1.884,214,4.266,289,3.395,344,1.423,356,1.24,357,1.746,359,1.655,360,2.469,363,1.17,364,1.655,365,3.571,367,3.395,369,1.655,370,1.655,373,1.17,378,1.655,380,1.655,381,1.655,431,2.628,432,1.982,434,4.006,437,1.329,438,1.994,439,2.693,443,2.693,444,2.693,449,1.329,451,1.806,452,2.975,457,1.655,464,1.806,465,1.806,467,1.806,468,1.994,469,1.806,623,2.693,624,2.247,625,2.247,626,2.63,627,2.63,628,3.922,629,2.63,630,2.63,631,4.266,632,2.63,633,2.729,634,2.247,635,2.975,636,2.63,637,2.63,638,2.63,639,2.63,640,2.63,641,2.63,642,2.63]],["title/modules/ProfileModule.html",[49,1.131,61,2.252]],["body/modules/ProfileModule.html",[2,1.854,3,0.23,4,0.201,5,0.201,13,0.021,26,0.434,27,0.833,35,0.23,36,0.212,47,0.016,48,0.016,49,1.755,51,1.818,52,2.195,60,2.862,61,4.425,63,2.63,64,2.054,65,2.054,67,2.806,68,3.004,139,2.523,623,4.206,633,3.973,634,3.705,643,3.705,644,3.705,645,4.337,646,4.337,647,4.337]],["title/injectables/ProfileService.html",[77,0.961,633,2.082]],["body/injectables/ProfileService.html",[3,0.121,4,0.105,5,0.105,7,0.3,8,1.11,13,0.021,18,0.952,20,1.818,21,1.384,22,0.758,23,1.384,25,1.818,26,0.351,27,0.437,35,0.121,36,0.111,37,0.899,38,0.849,41,2.471,45,1.65,47,0.01,48,0.01,77,0.943,78,1.012,81,1.308,100,3.213,102,1.472,154,3.48,155,1.149,156,1.23,157,1.908,160,2.169,163,1.23,167,2.611,169,1.9,170,1.775,187,1.389,213,1.765,235,1.472,237,1.775,268,1.323,289,3.455,323,1.323,344,1.23,352,1.323,356,1.11,357,1.563,363,1.563,373,1.012,389,2.211,393,2.211,394,3.038,396,2.211,397,2.211,398,3.038,400,2.664,405,2.211,406,1.431,407,1.431,408,2.211,409,1.431,410,1.431,411,1.431,412,1.431,413,1.431,414,1.431,431,2.439,432,2.169,437,1.775,449,1.775,480,2.412,485,2.412,490,1.561,493,2.947,495,1.561,496,1.561,497,1.561,498,2.947,625,3.001,633,2.044,635,1.724,648,1.943,649,2.274,650,2.274,651,2.274,652,2.274,653,2.274,654,2.274,655,2.274,656,2.274,657,2.274,658,2.274,659,2.274,660,3.512,661,3.512,662,3.512,663,3.512,664,2.274,665,2.274,666,2.274]],["title/classes/UpdateFavoriteDto.html",[36,0.175,667,2.713]],["body/classes/UpdateFavoriteDto.html",[3,0.274,4,0.239,5,0.239,13,0.021,26,0.415,30,1.31,35,0.274,36,0.252,47,0.018,48,0.018,189,2.999,190,1.461,192,3.909,356,1.629,374,3.909,571,2.788,667,4.686,668,4.403,669,3.244,670,5.154]],["title/classes/UpdateGameDto.html",[36,0.175,450,2.457]],["body/classes/UpdateGameDto.html",[3,0.27,4,0.236,5,0.236,13,0.021,26,0.412,35,0.27,36,0.249,47,0.018,48,0.018,190,1.442,229,2.96,231,2.729,232,3.858,356,1.608,436,3.202,450,4.21,571,2.752,669,3.202,671,4.346,672,4.346,673,4.346,674,5.087]],["title/classes/UpdateGenreDto.html",[36,0.175,527,2.457]],["body/classes/UpdateGenreDto.html",[3,0.274,4,0.239,5,0.239,13,0.021,26,0.415,30,1.31,35,0.274,36,0.252,47,0.018,48,0.018,190,1.461,283,2.999,285,3.909,356,1.629,527,4.243,531,3.909,571,2.788,669,3.244,675,4.403,676,5.154]],["title/classes/UpdateProfileDto.html",[36,0.175,631,2.457]],["body/classes/UpdateProfileDto.html",[3,0.274,4,0.239,5,0.239,13,0.021,26,0.415,30,1.31,35,0.274,36,0.252,47,0.018,48,0.018,190,1.461,289,2.999,291,3.909,356,1.629,571,2.788,631,4.243,635,3.909,669,3.244,677,4.403,678,5.154]],["title/classes/UpdateUserDto.html",[36,0.175,679,2.252]],["body/classes/UpdateUserDto.html",[3,0.274,4,0.239,5,0.239,13,0.021,26,0.415,30,1.31,35,0.274,36,0.252,47,0.018,48,0.018,190,1.461,306,2.999,308,3.909,356,1.629,571,2.788,669,3.244,679,3.89,680,4.403,681,3.909,682,5.154]],["title/classes/User.html",[36,0.175,102,1.499]],["body/classes/User.html",[3,0.218,4,0.19,5,0.19,7,0.54,13,0.02,18,1.098,21,1.434,22,0.903,23,1.618,35,0.218,36,0.2,47,0.015,48,0.015,81,1.413,102,2.242,166,3.751,175,4.092,190,1.161,193,1.787,213,1.69,235,2.497,318,4.571,343,3.467,345,3.467,346,4.339,683,3.498,684,4.095,685,4.095,686,4.095,687,4.095,688,4.095,689,4.095,690,4.095]],["title/controllers/UsersController.html",[0,1.195,691,2.457]],["body/controllers/UsersController.html",[0,0.871,2,0.871,3,0.138,4,0.121,5,0.121,7,0.343,8,1.232,12,1.956,13,0.021,14,1.641,18,0.888,20,1.637,21,1.246,22,0.682,23,1.246,25,1.752,26,0.391,27,0.5,28,3.146,29,1.41,30,0.663,35,0.138,36,0.127,37,1.03,38,0.973,39,2.998,45,1.752,47,0.011,48,0.011,81,1.289,89,1.516,104,3.261,107,2.267,110,2.267,111,1.79,112,1.79,113,1.16,114,3.555,130,3.204,187,1.845,213,1.709,306,3.383,356,1.232,357,1.734,359,1.641,360,2.453,363,1.16,364,1.641,365,2.676,367,2.267,369,1.641,370,1.641,373,1.16,378,1.641,380,1.641,381,1.641,431,2.616,432,1.969,434,4.255,437,1.317,439,2.676,443,2.676,444,2.676,449,1.317,451,1.79,457,1.641,464,1.79,465,1.79,467,1.79,469,1.79,679,3.9,681,2.955,691,2.676,692,2.227,693,2.606,694,2.606,695,2.606,696,2.606,697,2.606,698,2.606,699,2.606,700,2.606,701,3.896,702,2.606,703,2.606,704,3.896,705,2.606,706,2.715,707,2.227,708,2.606,709,2.606,710,2.606,711,2.606,712,2.606,713,2.606,714,2.606,715,2.606]],["title/modules/UsersModule.html",[49,1.131,62,2.252]],["body/modules/UsersModule.html",[2,1.816,3,0.223,4,0.195,5,0.195,13,0.021,26,0.444,27,0.806,35,0.223,36,0.205,47,0.016,48,0.016,49,1.719,51,1.759,52,2.149,60,2.837,62,4.396,63,2.575,64,1.988,65,1.988,67,2.747,68,2.941,113,1.868,139,2.442,143,2.882,144,2.882,145,2.882,146,2.271,691,4.141,706,3.938,707,3.586,716,3.586,717,3.586,718,4.197,719,4.197,720,4.197]],["title/injectables/UsersService.html",[77,0.961,706,2.082]],["body/injectables/UsersService.html",[3,0.102,4,0.089,5,0.089,7,0.254,8,0.974,13,0.021,18,0.927,20,1.706,21,1.391,22,0.739,23,1.298,25,1.706,26,0.345,27,0.369,35,0.102,36,0.094,37,0.761,38,0.718,41,2.281,45,1.523,47,0.009,48,0.009,77,0.827,78,0.856,81,1.255,100,3.208,102,1.291,154,3.476,155,0.972,156,1.041,157,1.74,160,1.556,163,1.041,164,2.336,165,2.921,166,2.424,167,2.78,168,1.644,169,2.382,170,2.225,175,2.115,176,3.339,177,3.882,182,2.631,187,1.74,193,1.029,213,1.681,235,1.291,268,1.119,306,2.561,323,1.119,343,1.792,345,1.792,356,1.218,357,1.371,363,1.371,373,0.856,389,1.939,393,1.939,394,2.771,396,1.939,397,1.939,398,2.771,405,1.939,406,1.211,407,1.211,408,1.939,409,1.211,410,1.211,411,1.211,412,1.211,413,1.211,414,1.211,431,2.225,432,1.946,433,2.115,436,3.234,437,1.556,449,1.556,457,1.211,480,2.115,485,2.115,490,1.321,493,2.645,495,1.321,496,1.321,497,1.321,498,2.645,511,1.459,577,2.631,679,2.771,681,2.336,706,1.792,721,1.644,722,3.851,723,1.924,724,1.924,725,1.924,726,1.924,727,1.924,728,1.924,729,1.924,730,1.924,731,1.924,732,1.644,733,1.644,734,1.924,735,1.924,736,1.924,737,1.924,738,4.402,739,1.924,740,4.402,741,3.08,742,3.08,743,3.08,744,3.08,745,1.924,746,3.08,747,3.08,748,3.08,749,3.08,750,1.924,751,1.924]],["title/coverage.html",[752,3.707]],["body/coverage.html",[0,2.023,1,1.818,5,0.123,6,2.262,13,0.021,22,0.349,32,1.54,36,0.339,47,0.011,48,0.011,77,1.708,79,2.262,87,1.818,88,2.262,94,1.666,102,1.11,116,1.54,118,1.666,122,2.008,136,1.666,153,2.262,157,1.047,170,1.338,189,1.54,191,2.262,192,2.99,229,1.54,230,2.262,231,2.096,232,2.99,265,6.258,283,1.54,284,2.262,285,2.99,289,1.54,290,2.262,291,2.99,306,1.54,307,2.262,308,2.99,341,1.818,342,2.262,344,1.432,354,1.818,355,2.262,371,1.54,388,2.262,417,2.262,420,1.338,429,1.818,430,2.262,450,1.818,454,1.54,479,2.262,514,2.262,519,1.818,520,2.262,527,1.818,529,1.54,544,2.262,559,2.262,583,2.262,589,2.262,590,2.262,603,2.262,616,2.262,623,1.818,624,2.262,631,1.818,633,1.54,648,2.262,667,2.008,668,2.262,671,2.262,675,2.262,677,2.262,679,1.666,680,2.262,683,2.262,691,1.818,692,2.262,706,1.54,721,2.262,752,2.008,753,2.647,754,2.647,755,2.647,756,4.71,757,6.225,758,2.262,759,2.262,760,3.942,761,6.225,762,5.849,763,3.942,764,5.218,765,3.942,766,2.262,767,2.647,768,2.262,769,2.262,770,2.262,771,2.262,772,2.647,773,2.647,774,2.647,775,2.647,776,2.647]],["title/dependencies.html",[52,1.702,777,2.55]],["body/dependencies.html",[13,0.021,27,0.842,30,1.115,31,4.241,36,0.273,47,0.016,48,0.016,52,1.734,113,1.952,141,3.326,146,2.372,164,3.326,227,2.216,352,2.551,570,5.26,672,3.746,673,3.746,778,6.156,779,4.385,780,5.592,781,4.385,782,4.385,783,4.385,784,5.592,785,4.385,786,3.746,787,4.385,788,4.385,789,4.385,790,3.746,791,4.385,792,4.385,793,4.385,794,4.385,795,4.385,796,4.385,797,4.385,798,4.385,799,3.746,800,3.746,801,4.385]],["title/miscellaneous/functions.html",[802,2.05,803,3.677]],["body/miscellaneous/functions.html",[7,0.73,13,0.018,47,0.018,48,0.018,766,4.735,768,5.829,802,3.806,803,4.735,804,5.543]],["title/index.html",[7,0.393,805,2.985,806,2.985]],["body/index.html",[4,0.139,13,0.02,22,0.394,30,0.76,31,2.268,36,0.247,47,0.012,48,0.012,52,1.182,84,2.555,85,4.318,160,1.511,227,2.178,228,1.117,244,2.555,266,2.268,356,0.946,610,2.555,752,2.268,786,2.555,790,2.555,799,4.318,800,2.555,807,2.991,808,2.991,809,4.311,810,2.991,811,2.991,812,2.991,813,2.991,814,2.991,815,5.054,816,2.991,817,2.991,818,5.531,819,2.991,820,6.746,821,2.991,822,2.991,823,6.563,824,2.991,825,2.991,826,4.311,827,4.311,828,2.991,829,2.991,830,2.991,831,4.311,832,4.311,833,2.991,834,2.991,835,2.991,836,5.531,837,2.991,838,5.531,839,4.311,840,2.555,841,5.054,842,2.991,843,2.991,844,2.991,845,2.991,846,2.991,847,5.054,848,5.531,849,2.991,850,2.991,851,2.991,852,5.531,853,5.054,854,2.991,855,2.991,856,2.991,857,4.311,858,2.991,859,2.991,860,2.991,861,2.991,862,4.311,863,2.991,864,2.991,865,2.991,866,2.555,867,2.991,868,2.991,869,5.054,870,2.991,871,2.991,872,2.991,873,2.991,874,2.991,875,2.991,876,2.555,877,2.991,878,3.683,879,4.311,880,4.311,881,2.991,882,2.991,883,2.991,884,2.991,885,2.991,886,2.991,887,2.991,888,2.991,889,2.991,890,2.991,891,2.991,892,2.991,893,2.991,894,2.555,895,2.991,896,2.991,897,2.991,898,2.991,899,2.991,900,2.991,901,2.555]],["title/modules.html",[51,2.049]],["body/modules.html",[13,0.017,47,0.017,48,0.017,50,3.294,51,2.01,56,3.019,57,3.019,58,3.019,59,3.019,60,2.01,61,3.019,62,3.019,876,6.125,878,6.125,902,7.169,903,7.169]],["title/overview.html",[904,4.176]],["body/overview.html",[2,1.076,13,0.021,32,3.063,47,0.013,48,0.013,50,4.916,51,1.35,52,1.796,53,2.751,54,2.751,55,2.751,56,4.204,57,4.049,58,4.049,59,4.049,60,2.896,61,4.049,62,4.049,63,2.152,64,1.525,65,1.525,78,1.433,116,3.063,133,2.751,134,2.751,136,3.314,157,2.543,190,0.913,371,3.063,383,2.751,385,2.751,454,3.063,474,2.751,476,2.751,529,3.063,539,2.751,541,2.751,597,2.751,598,2.751,599,2.751,633,3.063,643,2.751,644,2.751,706,3.063,716,2.751,717,2.751,866,2.751,904,2.751,905,3.22,906,3.22,907,3.22]],["title/properties.html",[193,1.438,777,2.55]],["body/properties.html",[13,0.021,47,0.018,48,0.018,193,1.825,228,2.041,894,4.669,901,4.669,908,5.465,909,5.465,910,5.465]],["title/miscellaneous/variables.html",[802,2.05,911,3.677]],["body/miscellaneous/variables.html",[7,0.333,11,2.16,13,0.021,22,0.333,41,1.804,45,0.799,47,0.011,48,0.011,102,1.596,122,2.888,186,1.917,187,0.999,213,1.63,228,2.147,231,2.559,233,3.948,235,2.409,236,3.948,237,2.905,238,3.948,239,3.619,247,4.911,266,4.36,274,4.911,278,2.16,343,3.345,345,3.345,420,2.905,573,2.16,732,3.253,733,3.253,758,2.16,759,3.253,769,2.16,770,3.253,771,3.253,802,1.736,840,2.16,911,2.16,912,2.528,913,2.528,914,2.528,915,2.528,916,2.528,917,2.528,918,2.528,919,2.528,920,2.528,921,2.528,922,3.808,923,4.581,924,5.749,925,5.749,926,6.588,927,6.588,928,2.528,929,2.528,930,2.528,931,2.528,932,2.528,933,2.528,934,2.528,935,2.528,936,2.528,937,2.528,938,2.528,939,3.808,940,2.528,941,2.528,942,2.528,943,2.528,944,2.528,945,2.528,946,2.528,947,2.528,948,3.808,949,2.528,950,2.528,951,2.528,952,2.528,953,2.528,954,2.528,955,2.528,956,2.528,957,2.528,958,2.528,959,2.528,960,2.528,961,2.528,962,2.528,963,2.528,964,2.528,965,2.528,966,2.528,967,2.528,968,3.808,969,2.528,970,2.528,971,2.528,972,2.528,973,2.528,974,2.528,975,2.528,976,2.528,977,2.528,978,2.528,979,2.528,980,3.808,981,2.528,982,2.528,983,2.528,984,2.528,985,2.528]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Favorite.html":{},"controllers/FavoriteController.html":{},"modules/FavoriteModule.html":{},"injectables/FavoriteService.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"classes/Genre.html":{},"controllers/GenreController.html":{},"modules/GenreModule.html":{},"injectables/GenreService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/UpdateFavoriteDto.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGenreDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":265,"title":{},"body":{"classes/CreateGameDto.html":{},"coverage.html":{}}}],["0.0.1",{"_index":909,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":794,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":788,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":787,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":789,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":761,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":765,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":756,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":757,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":772,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":763,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":762,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":773,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":774,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":764,"title":{},"body":{"coverage.html":{}}}],["00f7f3102bbf",{"_index":934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["05t20:45:13.269z",{"_index":949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["05t20:45:13.270z",{"_index":950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["05t20:46:36.640z",{"_index":959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["05t20:46:36.641z",{"_index":960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["05t20:48:48.964z",{"_index":928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["05t20:48:48.965z",{"_index":929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["05t20:50:03.368z",{"_index":970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["05t20:50:03.369z",{"_index":971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["05t20:51:25.174z",{"_index":980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["05t20:56:21.186z",{"_index":939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["07",{"_index":927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0b3c46fe",{"_index":914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0be696ad",{"_index":972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":838,"title":{},"body":{"index.html":{}}}],["1.0.0",{"_index":791,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":781,"title":{},"body":{"dependencies.html":{}}}],["1.images.arcpublishing.com/infobae/k3bxuzzj65cxrhtuvvuxdg7afe.jpg",{"_index":259,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["12",{"_index":746,"title":{},"body":{"injectables/UsersService.html":{}}}],["17",{"_index":907,"title":{},"body":{"overview.html":{}}}],["17cbd74e",{"_index":201,"title":{},"body":{"classes/CreateFavoriteDto.html":{}}}],["1991",{"_index":923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1992",{"_index":958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1994",{"_index":969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1]?.trim",{"_index":410,"title":{},"body":{"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{}}}],["1d",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{}}}],["2",{"_index":841,"title":{},"body":{"index.html":{}}}],["2013",{"_index":278,"title":{},"body":{"classes/CreateGameDto.html":{},"miscellaneous/variables.html":{}}}],["2022",{"_index":926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["29caef02",{"_index":250,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["2d16",{"_index":251,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["3",{"_index":847,"title":{},"body":{"index.html":{}}}],["3.0.2",{"_index":796,"title":{},"body":{"dependencies.html":{}}}],["327d06c5",{"_index":300,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["3abbdc14508d",{"_index":944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":851,"title":{},"body":{"index.html":{}}}],["4.0.0",{"_index":784,"title":{},"body":{"dependencies.html":{}}}],["4.4.0",{"_index":801,"title":{},"body":{"dependencies.html":{}}}],["4144",{"_index":932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["41d0",{"_index":931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["42d3",{"_index":221,"title":{},"body":{"classes/CreateFavoriteDto.html":{}}}],["43ae",{"_index":203,"title":{},"body":{"classes/CreateFavoriteDto.html":{}}}],["440835270aa2",{"_index":918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4482",{"_index":302,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["46c9903b",{"_index":930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["47aa",{"_index":962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4891",{"_index":916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["490b",{"_index":252,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["49a1",{"_index":953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4d66",{"_index":974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4db1e332",{"_index":206,"title":{},"body":{"classes/CreateFavoriteDto.html":{}}}],["4e21",{"_index":208,"title":{},"body":{"classes/CreateFavoriteDto.html":{}}}],["4f38",{"_index":963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4f85",{"_index":942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":266,"title":{},"body":{"classes/CreateGameDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["5.0.1",{"_index":785,"title":{},"body":{"dependencies.html":{}}}],["5.2.1",{"_index":783,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":861,"title":{},"body":{"index.html":{}}}],["6922bdbd5f0c",{"_index":304,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["7",{"_index":866,"title":{},"body":{"index.html":{},"overview.html":{}}}],["7.2.0",{"_index":798,"title":{},"body":{"dependencies.html":{}}}],["76c0ad237559",{"_index":955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":905,"title":{},"body":{"overview.html":{}}}],["8.4.7",{"_index":778,"title":{},"body":{"dependencies.html":{}}}],["82bc",{"_index":917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["83c4",{"_index":209,"title":{},"body":{"classes/CreateFavoriteDto.html":{}}}],["847e3410eb5a",{"_index":210,"title":{},"body":{"classes/CreateFavoriteDto.html":{}}}],["871a",{"_index":253,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["8d1b",{"_index":915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":906,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":780,"title":{},"body":{"dependencies.html":{}}}],["91dd",{"_index":202,"title":{},"body":{"classes/CreateFavoriteDto.html":{}}}],["940b",{"_index":303,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["980d",{"_index":975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9a69",{"_index":943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9daa",{"_index":222,"title":{},"body":{"classes/CreateFavoriteDto.html":{}}}],["9dc5",{"_index":954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a3b6",{"_index":220,"title":{},"body":{"classes/CreateFavoriteDto.html":{}}}],["a544",{"_index":941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a695ff43f56b",{"_index":223,"title":{},"body":{"classes/CreateFavoriteDto.html":{}}}],["a7b1577e",{"_index":961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a8d9",{"_index":204,"title":{},"body":{"classes/CreateFavoriteDto.html":{}}}],["abcd@1234",{"_index":312,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["above",{"_index":842,"title":{},"body":{"index.html":{}}}],["access",{"_index":875,"title":{},"body":{"index.html":{}}}],["action",{"_index":922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["adicionando",{"_index":217,"title":{},"body":{"classes/CreateFavoriteDto.html":{}}}],["administrador",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{}}}],["adventure",{"_index":948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alaorribeiro",{"_index":325,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["alaricodasneves",{"_index":298,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["algum",{"_index":412,"title":{},"body":{"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{}}}],["alien",{"_index":937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["amazing",{"_index":884,"title":{},"body":{"index.html":{}}}],["amazon.com/images/i/71cpnyujqnl._ac_sx425_.jpg",{"_index":295,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["ano",{"_index":276,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["aos",{"_index":218,"title":{},"body":{"classes/CreateFavoriteDto.html":{}}}],["api",{"_index":86,"title":{},"body":{"injectables/AppService.html":{}}}],["apibearerauth",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/UsersController.html":{}}}],["apioperation",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UsersController.html":{}}}],["apiproperty",{"_index":225,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{}}}],["apiproperty({description",{"_index":310,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginResponseDto.html":{}}}],["apitags",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UsersController.html":{}}}],["apitags('auth",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('favorite",{"_index":376,"title":{},"body":{"controllers/FavoriteController.html":{}}}],["apitags('game",{"_index":458,"title":{},"body":{"controllers/GameController.html":{}}}],["apitags('genre",{"_index":532,"title":{},"body":{"controllers/GenreController.html":{}}}],["apitags('profile",{"_index":636,"title":{},"body":{"controllers/ProfileController.html":{}}}],["apitags('status",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('users",{"_index":708,"title":{},"body":{"controllers/UsersController.html":{}}}],["aplicação",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["app",{"_index":610,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":615,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":814,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":50,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":32,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{}}}],["atualizar",{"_index":704,"title":{},"body":{"controllers/UsersController.html":{}}}],["autenticado",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginResponseDto.html":{}}}],["autenticado'})@apibearerauth",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":138,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":87,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/UsersController.html":{}}}],["authmodule",{"_index":56,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":894,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":116,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["avaliação",{"_index":263,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["await",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{}}}],["b0d0acdc9722",{"_index":254,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["b183",{"_index":964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["b362",{"_index":933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["b7178ccc",{"_index":219,"title":{},"body":{"classes/CreateFavoriteDto.html":{}}}],["backers",{"_index":885,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":735,"title":{},"body":{"injectables/UsersService.html":{}}}],["badrequestexception('as",{"_index":741,"title":{},"body":{"injectables/UsersService.html":{}}}],["baseurl",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["bcrypt",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(data.password",{"_index":750,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcrypt.hash(dto.password",{"_index":745,"title":{},"body":{"injectables/UsersService.html":{}}}],["body",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":318,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["bootstrap",{"_index":768,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":903,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":876,"title":{},"body":{"index.html":{},"modules.html":{}}}],["building",{"_index":810,"title":{},"body":{"index.html":{}}}],["c59f",{"_index":207,"title":{},"body":{"classes/CreateFavoriteDto.html":{}}}],["catch(this.handleerror",{"_index":405,"title":{},"body":{"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{}}}],["cc00b5ec602c",{"_index":976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ce00",{"_index":973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["change",{"_index":854,"title":{},"body":{"index.html":{}}}],["class",{"_index":36,"title":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Favorite.html":{},"classes/Game.html":{},"classes/Genre.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Profile.html":{},"classes/UpdateFavoriteDto.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGenreDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Favorite.html":{},"controllers/FavoriteController.html":{},"modules/FavoriteModule.html":{},"injectables/FavoriteService.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"classes/Genre.html":{},"controllers/GenreController.html":{},"modules/GenreModule.html":{},"injectables/GenreService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/UpdateFavoriteDto.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGenreDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{}}}],["classes",{"_index":190,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Favorite.html":{},"classes/Game.html":{},"classes/Genre.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Profile.html":{},"classes/UpdateFavoriteDto.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGenreDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["click",{"_index":839,"title":{},"body":{"index.html":{}}}],["clone",{"_index":848,"title":{},"body":{"index.html":{}}}],["cloned",{"_index":860,"title":{},"body":{"index.html":{}}}],["cloning",{"_index":837,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":133,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":134,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_favoritemodule",{"_index":383,"title":{},"body":{"modules/FavoriteModule.html":{},"overview.html":{}}}],["cluster_favoritemodule_imports",{"_index":384,"title":{},"body":{"modules/FavoriteModule.html":{}}}],["cluster_favoritemodule_providers",{"_index":385,"title":{},"body":{"modules/FavoriteModule.html":{},"overview.html":{}}}],["cluster_gamemodule",{"_index":474,"title":{},"body":{"modules/GameModule.html":{},"overview.html":{}}}],["cluster_gamemodule_imports",{"_index":475,"title":{},"body":{"modules/GameModule.html":{}}}],["cluster_gamemodule_providers",{"_index":476,"title":{},"body":{"modules/GameModule.html":{},"overview.html":{}}}],["cluster_genremodule",{"_index":539,"title":{},"body":{"modules/GenreModule.html":{},"overview.html":{}}}],["cluster_genremodule_imports",{"_index":540,"title":{},"body":{"modules/GenreModule.html":{}}}],["cluster_genremodule_providers",{"_index":541,"title":{},"body":{"modules/GenreModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":597,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":599,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":598,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_profilemodule",{"_index":643,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_imports",{"_index":645,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_profilemodule_providers",{"_index":644,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":716,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":718,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":717,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":846,"title":{},"body":{"index.html":{}}}],["com",{"_index":496,"title":{},"body":{"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{}}}],["command",{"_index":870,"title":{},"body":{"index.html":{}}}],["confirmação",{"_index":311,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["confirmpassword",{"_index":309,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["connect",{"_index":400,"title":{},"body":{"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/ProfileService.html":{}}}],["console.log(isadmin",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FavoriteService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{}}}],["constructor(prisma",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{}}}],["constructor(private",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/FavoriteController.html":{},"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["contra",{"_index":935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('favorite",{"_index":377,"title":{},"body":{"controllers/FavoriteController.html":{}}}],["controller('game",{"_index":459,"title":{},"body":{"controllers/GameController.html":{}}}],["controller('genre",{"_index":533,"title":{},"body":{"controllers/GenreController.html":{}}}],["controller('profile",{"_index":637,"title":{},"body":{"controllers/ProfileController.html":{}}}],["controller('users",{"_index":709,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/FavoriteController.html":{},"modules/FavoriteModule.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"controllers/GenreController.html":{},"modules/GenreModule.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["copied",{"_index":864,"title":{},"body":{"index.html":{}}}],["country",{"_index":947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coverage",{"_index":752,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":356,"title":{},"body":{"controllers/FavoriteController.html":{},"injectables/FavoriteService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/UpdateFavoriteDto.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGenreDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["create(@body",{"_index":378,"title":{},"body":{"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UsersController.html":{}}}],["create(createfavoritedto",{"_index":358,"title":{},"body":{"controllers/FavoriteController.html":{},"injectables/FavoriteService.html":{}}}],["create(creategenredto",{"_index":521,"title":{},"body":{"controllers/GenreController.html":{}}}],["create(createprofiledto",{"_index":625,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["create(createuserdto",{"_index":694,"title":{},"body":{"controllers/UsersController.html":{}}}],["create(dto",{"_index":433,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/UsersService.html":{}}}],["createdat",{"_index":343,"title":{},"body":{"classes/Favorite.html":{},"classes/Genre.html":{},"classes/Profile.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["createfavoritedto",{"_index":189,"title":{"classes/CreateFavoriteDto.html":{}},"body":{"classes/CreateFavoriteDto.html":{},"controllers/FavoriteController.html":{},"injectables/FavoriteService.html":{},"classes/UpdateFavoriteDto.html":{},"coverage.html":{}}}],["createfavoritedto.games.map((gameid",{"_index":402,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["createfavoritedto.profileid",{"_index":401,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["creategamedto",{"_index":229,"title":{"classes/CreateGameDto.html":{}},"body":{"classes/CreateGameDto.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/UpdateGameDto.html":{},"coverage.html":{}}}],["creategenredto",{"_index":283,"title":{"classes/CreateGenreDto.html":{}},"body":{"classes/CreateGenreDto.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"classes/UpdateGenreDto.html":{},"coverage.html":{}}}],["createparamdecorator((_",{"_index":981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createprofiledto",{"_index":289,"title":{"classes/CreateProfileDto.html":{}},"body":{"classes/CreateProfileDto.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["createprofiledto.image",{"_index":663,"title":{},"body":{"injectables/ProfileService.html":{}}}],["createprofiledto.title",{"_index":662,"title":{},"body":{"injectables/ProfileService.html":{}}}],["createprofiledto.userid",{"_index":661,"title":{},"body":{"injectables/ProfileService.html":{}}}],["createuserdto",{"_index":306,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["criar",{"_index":360,"title":{},"body":{"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UsersController.html":{}}}],["criação",{"_index":277,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["ctx",{"_index":982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":855,"title":{},"body":{"index.html":{}}}],["da",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateGameDto.html":{},"classes/CreateUserDto.html":{}}}],["dados",{"_index":595,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["data",{"_index":398,"title":{},"body":{"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{}}}],["data.password",{"_index":749,"title":{},"body":{"injectables/UsersService.html":{}}}],["date",{"_index":346,"title":{},"body":{"classes/Favorite.html":{},"classes/Genre.html":{},"classes/Profile.html":{},"classes/User.html":{}}}],["de",{"_index":264,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"controllers/FavoriteController.html":{}}}],["decorators",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenreController.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/ProfileController.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":732,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":145,"title":{},"body":{"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GenreModule.html":{},"modules/UsersModule.html":{}}}],["defined",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Favorite.html":{},"controllers/FavoriteController.html":{},"injectables/FavoriteService.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/Genre.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":467,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UsersController.html":{}}}],["delete(':id')@apioperation({summary",{"_index":696,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(':id')@httpcode(httpstatus.no_content)@apioperation({summary",{"_index":438,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{}}}],["delete(@param('id",{"_index":469,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UsersController.html":{}}}],["delete(id",{"_index":437,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dependencies",{"_index":52,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FavoriteModule.html":{},"modules/GameModule.html":{},"modules/GenreModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":228,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"injectables/FavoriteService.html":{},"classes/Game.html":{},"injectables/GameService.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["descrição",{"_index":241,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["development",{"_index":822,"title":{},"body":{"index.html":{}}}],["devem",{"_index":743,"title":{},"body":{"injectables/UsersService.html":{}}}],["directory",{"_index":857,"title":{},"body":{"index.html":{}}}],["docs",{"_index":83,"title":{},"body":{"injectables/AppService.html":{}}}],["documentation",{"_index":753,"title":{},"body":{"coverage.html":{}}}],["donkey",{"_index":945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["donkey_kong_country_capa.png",{"_index":925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dto",{"_index":436,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"classes/UpdateGameDto.html":{},"injectables/UsersService.html":{}}}],["dto.confirmpassword",{"_index":740,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto.description",{"_index":502,"title":{},"body":{"injectables/GameService.html":{}}}],["dto.gameplayyoutubeurl",{"_index":506,"title":{},"body":{"injectables/GameService.html":{}}}],["dto.genres.map((genresid",{"_index":507,"title":{},"body":{"injectables/GameService.html":{}}}],["dto.image",{"_index":501,"title":{},"body":{"injectables/GameService.html":{}}}],["dto.imdbscore",{"_index":504,"title":{},"body":{"injectables/GameService.html":{}}}],["dto.password",{"_index":739,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto.title",{"_index":500,"title":{},"body":{"injectables/GameService.html":{}}}],["dto.traileryoutubeurl",{"_index":505,"title":{},"body":{"injectables/GameService.html":{}}}],["dto.ts",{"_index":232,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/UpdateGameDto.html":{},"coverage.html":{}}}],["dto.ts:10",{"_index":272,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["dto.ts:16",{"_index":242,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["dto.ts:22",{"_index":279,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["dto.ts:28",{"_index":260,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["dto.ts:34",{"_index":267,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["dto.ts:41",{"_index":248,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["dto.ts:48",{"_index":275,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["dto.ts:54",{"_index":255,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["dto.year",{"_index":503,"title":{},"body":{"injectables/GameService.html":{}}}],["dto/create",{"_index":373,"title":{},"body":{"controllers/FavoriteController.html":{},"injectables/FavoriteService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/login",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/login.dto",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":457,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["e/ou",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["e2e",{"_index":833,"title":{},"body":{"index.html":{}}}],["e5299870",{"_index":951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ea6c",{"_index":301,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["each",{"_index":197,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{}}}],["eae123b0aad5",{"_index":205,"title":{},"body":{"classes/CreateFavoriteDto.html":{}}}],["earlier",{"_index":865,"title":{},"body":{"index.html":{}}}],["east",{"_index":258,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["editar",{"_index":452,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{}}}],["efficient",{"_index":811,"title":{},"body":{"index.html":{}}}],["enableshutdownhooks",{"_index":605,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":607,"title":{},"body":{"injectables/PrismaService.html":{}}}],["encontrado",{"_index":497,"title":{},"body":{"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{}}}],["enter",{"_index":868,"title":{},"body":{"index.html":{}}}],["entities/favorite.entity",{"_index":375,"title":{},"body":{"controllers/FavoriteController.html":{}}}],["entities/game.entity",{"_index":456,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{}}}],["entities/genre.entity",{"_index":553,"title":{},"body":{"injectables/GenreService.html":{}}}],["entities/profile.entity",{"_index":657,"title":{},"body":{"injectables/ProfileService.html":{}}}],["entities/user.entity",{"_index":736,"title":{},"body":{"injectables/UsersService.html":{}}}],["erro",{"_index":413,"title":{},"body":{"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{}}}],["error",{"_index":394,"title":{},"body":{"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{}}}],["error.message?.split('\\n",{"_index":407,"title":{},"body":{"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{}}}],["errorlines",{"_index":406,"title":{},"body":{"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{}}}],["errorlines[errorlines.length",{"_index":409,"title":{},"body":{"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{}}}],["est",{"_index":216,"title":{},"body":{"classes/CreateFavoriteDto.html":{}}}],["example",{"_index":200,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{}}}],["executioncontext",{"_index":983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["existe",{"_index":582,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["expiresin",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Favorite.html":{},"controllers/FavoriteController.html":{},"modules/FavoriteModule.html":{},"injectables/FavoriteService.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"classes/Genre.html":{},"controllers/GenreController.html":{},"modules/GenreModule.html":{},"injectables/GenreService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/UpdateFavoriteDto.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGenreDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":601,"title":{},"body":{"modules/PrismaModule.html":{}}}],["express",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"dependencies.html":{},"index.html":{}}}],["extends",{"_index":571,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateFavoriteDto.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGenreDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{}}}],["extractjwt",{"_index":568,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":575,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoia2luz3hpbwjpbmhhiiwiawf0ijoxnju3otk1mzq4lcjlehaioje2ntgwode3ndh9.bmqgdb2gzhx_uue",{"_index":592,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["f3f0",{"_index":952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f4d7f518ae3e",{"_index":965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fa11e5a9",{"_index":940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["false",{"_index":577,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["favorite",{"_index":341,"title":{"classes/Favorite.html":{}},"body":{"classes/Favorite.html":{},"controllers/FavoriteController.html":{},"coverage.html":{}}}],["favorite.controller",{"_index":387,"title":{},"body":{"modules/FavoriteModule.html":{}}}],["favorite.dto",{"_index":374,"title":{},"body":{"controllers/FavoriteController.html":{},"injectables/FavoriteService.html":{},"classes/UpdateFavoriteDto.html":{}}}],["favorite.dto.ts",{"_index":192,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/UpdateFavoriteDto.html":{},"coverage.html":{}}}],["favorite.dto.ts:10",{"_index":224,"title":{},"body":{"classes/CreateFavoriteDto.html":{}}}],["favorite.dto.ts:17",{"_index":211,"title":{},"body":{"classes/CreateFavoriteDto.html":{}}}],["favorite.service",{"_index":372,"title":{},"body":{"controllers/FavoriteController.html":{},"modules/FavoriteModule.html":{}}}],["favorite/favorite.module",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["favoritecontroller",{"_index":354,"title":{"controllers/FavoriteController.html":{}},"body":{"controllers/FavoriteController.html":{},"modules/FavoriteModule.html":{},"coverage.html":{}}}],["favoritemodule",{"_index":57,"title":{"modules/FavoriteModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FavoriteModule.html":{},"modules.html":{},"overview.html":{}}}],["favoriteservice",{"_index":371,"title":{"injectables/FavoriteService.html":{}},"body":{"controllers/FavoriteController.html":{},"modules/FavoriteModule.html":{},"injectables/FavoriteService.html":{},"coverage.html":{},"overview.html":{}}}],["favoritos",{"_index":199,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"controllers/FavoriteController.html":{}}}],["fight",{"_index":968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fighter",{"_index":978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Favorite.html":{},"controllers/FavoriteController.html":{},"modules/FavoriteModule.html":{},"injectables/FavoriteService.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"classes/Genre.html":{},"controllers/GenreController.html":{},"modules/GenreModule.html":{},"injectables/GenreService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/UpdateFavoriteDto.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGenreDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["files",{"_index":844,"title":{},"body":{"index.html":{}}}],["findall",{"_index":431,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findbyid",{"_index":480,"title":{},"body":{"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{}}}],["findbyid(id",{"_index":485,"title":{},"body":{"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{}}}],["findone",{"_index":357,"title":{},"body":{"controllers/FavoriteController.html":{},"injectables/FavoriteService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":381,"title":{},"body":{"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UsersController.html":{}}}],["findone(id",{"_index":363,"title":{},"body":{"controllers/FavoriteController.html":{},"injectables/FavoriteService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["fraca",{"_index":340,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["fraca'})@apiproperty({description",{"_index":332,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["framework",{"_index":809,"title":{},"body":{"index.html":{}}}],["function",{"_index":767,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":803,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":871,"title":{},"body":{"index.html":{}}}],["game",{"_index":231,"title":{"classes/Game.html":{}},"body":{"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/Favorite.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/UpdateGameDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["game.controller",{"_index":478,"title":{},"body":{"modules/GameModule.html":{}}}],["game.service",{"_index":455,"title":{},"body":{"controllers/GameController.html":{},"modules/GameModule.html":{}}}],["game/game.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["gamecontroller",{"_index":429,"title":{"controllers/GameController.html":{}},"body":{"controllers/GameController.html":{},"modules/GameModule.html":{},"coverage.html":{}}}],["gameid",{"_index":403,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["gamemocks",{"_index":771,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gamemodule",{"_index":58,"title":{"modules/GameModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GameModule.html":{},"modules.html":{},"overview.html":{}}}],["gameplay",{"_index":246,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["gameplayyoutubeurl",{"_index":233,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/Game.html":{},"injectables/GameService.html":{},"miscellaneous/variables.html":{}}}],["games",{"_index":194,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/Favorite.html":{},"injectables/FavoriteService.html":{},"controllers/GameController.html":{}}}],["gameservice",{"_index":454,"title":{"injectables/GameService.html":{}},"body":{"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"coverage.html":{},"overview.html":{}}}],["generos",{"_index":249,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["genre",{"_index":420,"title":{"classes/Genre.html":{}},"body":{"classes/Game.html":{},"injectables/GameService.html":{},"classes/Genre.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["genre.controller",{"_index":543,"title":{},"body":{"modules/GenreModule.html":{}}}],["genre.dto",{"_index":531,"title":{},"body":{"controllers/GenreController.html":{},"injectables/GenreService.html":{},"classes/UpdateGenreDto.html":{}}}],["genre.dto.ts",{"_index":285,"title":{},"body":{"classes/CreateGenreDto.html":{},"classes/UpdateGenreDto.html":{},"coverage.html":{}}}],["genre.dto.ts:10",{"_index":288,"title":{},"body":{"classes/CreateGenreDto.html":{}}}],["genre.service",{"_index":530,"title":{},"body":{"controllers/GenreController.html":{},"modules/GenreModule.html":{}}}],["genre/genre.module",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["genrecontroller",{"_index":519,"title":{"controllers/GenreController.html":{}},"body":{"controllers/GenreController.html":{},"modules/GenreModule.html":{},"coverage.html":{}}}],["genremodule",{"_index":59,"title":{"modules/GenreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GenreModule.html":{},"modules.html":{},"overview.html":{}}}],["genres",{"_index":234,"title":{},"body":{"classes/CreateGameDto.html":{},"injectables/FavoriteService.html":{},"classes/Game.html":{},"injectables/GameService.html":{}}}],["genreservice",{"_index":529,"title":{"injectables/GenreService.html":{}},"body":{"controllers/GenreController.html":{},"modules/GenreModule.html":{},"injectables/GenreService.html":{},"coverage.html":{},"overview.html":{}}}],["genresid",{"_index":508,"title":{},"body":{"injectables/GameService.html":{}}}],["gerado",{"_index":591,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["get(':id",{"_index":380,"title":{},"body":{"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UsersController.html":{}}}],["get(':id')@apioperation({summary",{"_index":364,"title":{},"body":{"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UsersController.html":{}}}],["get()@apioperation({summary",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UsersController.html":{}}}],["get()@useguards(undefined)@apioperation({summary",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["getappstatus",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getappstatus(@req",{"_index":40,"title":{},"body":{"controllers/AppController.html":{}}}],["getappstatus(baseurl",{"_index":80,"title":{},"body":{"injectables/AppService.html":{}}}],["getappstatus(req",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["getting",{"_index":805,"title":{"index.html":{}},"body":{}}],["git",{"_index":862,"title":{},"body":{"index.html":{}}}],["groupgames",{"_index":472,"title":{},"body":{"controllers/GameController.html":{}}}],["grow",{"_index":881,"title":{},"body":{"index.html":{}}}],["gênero",{"_index":286,"title":{},"body":{"classes/CreateGenreDto.html":{},"controllers/GameController.html":{},"controllers/GenreController.html":{}}}],["gêneros",{"_index":524,"title":{},"body":{"controllers/GenreController.html":{}}}],["handleerror",{"_index":389,"title":{},"body":{"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{}}}],["handleerror(error",{"_index":393,"title":{},"body":{"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{}}}],["here",{"_index":891,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":442,"title":{},"body":{"controllers/GameController.html":{}}}],["http://localhost:3333/api",{"_index":877,"title":{},"body":{"index.html":{}}}],["httpcode",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{}}}],["httpcode(httpstatus.no_content",{"_index":468,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{}}}],["httpcode(httpstatus.ok",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["https",{"_index":850,"title":{},"body":{"index.html":{}}}],["https://cloudfront",{"_index":257,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["https://http2.mlstatic.com/d_nq_np_965824",{"_index":314,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["https://m.media",{"_index":294,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["https://nestjs.com",{"_index":898,"title":{},"body":{"index.html":{}}}],["https://upload.wikimedia.org/wikipedia/pt/thumb/8/83/donkey_kong_country_capa.png/270px",{"_index":924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://youtu.be/mdyqt0_9vr4",{"_index":274,"title":{},"body":{"classes/CreateGameDto.html":{},"miscellaneous/variables.html":{}}}],["https://youtu.be/p4qg59y6fge",{"_index":247,"title":{},"body":{"classes/CreateGameDto.html":{},"miscellaneous/variables.html":{}}}],["httpstatus",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{}}}],["id",{"_index":213,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateProfileDto.html":{},"classes/Favorite.html":{},"controllers/FavoriteController.html":{},"injectables/FavoriteService.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/Genre.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["id'})@useguards(undefined)@apibearerauth",{"_index":702,"title":{},"body":{"controllers/UsersController.html":{}}}],["identifier",{"_index":754,"title":{},"body":{"coverage.html":{}}}],["if(!user",{"_index":581,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["if(dto.password",{"_index":748,"title":{},"body":{"injectables/UsersService.html":{}}}],["ignoreexpiration",{"_index":576,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["iguais",{"_index":744,"title":{},"body":{"injectables/UsersService.html":{}}}],["ii",{"_index":979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iii",{"_index":936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image",{"_index":235,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"injectables/FavoriteService.html":{},"classes/Game.html":{},"injectables/GameService.html":{},"classes/Profile.html":{},"injectables/ProfileService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["imagem",{"_index":256,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{}}}],["imdbscore",{"_index":236,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/Game.html":{},"injectables/GameService.html":{},"miscellaneous/variables.html":{}}}],["implements",{"_index":612,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Favorite.html":{},"controllers/FavoriteController.html":{},"modules/FavoriteModule.html":{},"injectables/FavoriteService.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/GenreController.html":{},"modules/GenreModule.html":{},"injectables/GenreService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/UpdateFavoriteDto.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGenreDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FavoriteModule.html":{},"modules/GameModule.html":{},"modules/GenreModule.html":{},"modules/ProfileModule.html":{},"modules/UsersModule.html":{}}}],["include",{"_index":416,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Favorite.html":{},"controllers/FavoriteController.html":{},"injectables/FavoriteService.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/Genre.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":608,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Favorite.html":{},"controllers/FavoriteController.html":{},"modules/FavoriteModule.html":{},"injectables/FavoriteService.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"classes/Genre.html":{},"controllers/GenreController.html":{},"modules/GenreModule.html":{},"injectables/GenreService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/UpdateFavoriteDto.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGenreDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["informação",{"_index":320,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["injectable",{"_index":77,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":78,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["installation",{"_index":819,"title":{},"body":{"index.html":{}}}],["installing",{"_index":869,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":821,"title":{},"body":{"index.html":{}}}],["instinct",{"_index":967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inválidos",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["isadmin",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["isboolean",{"_index":335,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isboolean()@apiproperty({description",{"_index":319,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["ishashvalid",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["isnotempty",{"_index":588,"title":{},"body":{"classes/LoginDto.html":{}}}],["isnumber",{"_index":280,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["isnumber()@apiproperty({description",{"_index":262,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["isstring",{"_index":281,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isstring()@apiproperty({description",{"_index":240,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty()@apiproperty({description",{"_index":584,"title":{},"body":{"classes/LoginDto.html":{}}}],["isstring()@isurl()@apiproperty({description",{"_index":243,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["isstring()@minlength(6)@matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":327,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isurl",{"_index":282,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{}}}],["isurl()@apiproperty({description",{"_index":293,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{}}}],["isuuid",{"_index":226,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateProfileDto.html":{}}}],["isuuid()@apiproperty({description",{"_index":212,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateProfileDto.html":{}}}],["isuuid(undefined",{"_index":196,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{}}}],["jogos",{"_index":366,"title":{},"body":{"controllers/FavoriteController.html":{}}}],["join",{"_index":887,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":146,"title":{},"body":{"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GenreModule.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":574,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":140,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":147,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":136,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":895,"title":{},"body":{"index.html":{}}}],["killer",{"_index":966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kingximbinha",{"_index":585,"title":{},"body":{"classes/LoginDto.html":{}}}],["kong",{"_index":946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lasterrorline",{"_index":408,"title":{},"body":{"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{}}}],["league",{"_index":270,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["legend",{"_index":919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legends",{"_index":271,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["license",{"_index":901,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":880,"title":{},"body":{"index.html":{}}}],["link",{"_index":840,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["list",{"_index":843,"title":{},"body":{"index.html":{}}}],["lista",{"_index":361,"title":{},"body":{"controllers/FavoriteController.html":{},"controllers/GameController.html":{}}}],["listar",{"_index":365,"title":{},"body":{"controllers/FavoriteController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UsersController.html":{}}}],["literal",{"_index":563,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["local",{"_index":790,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["location",{"_index":858,"title":{},"body":{"index.html":{}}}],["logged",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["loggeduser",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginResponseDto.html":{}}}],["login(@body",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(logindto",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":94,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["loginresponsedto",{"_index":118,"title":{"classes/LoginResponseDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["luta",{"_index":287,"title":{},"body":{"classes/CreateGenreDto.html":{}}}],["mario",{"_index":956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matches",{"_index":336,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":339,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matching",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Favorite.html":{},"controllers/FavoriteController.html":{},"modules/FavoriteModule.html":{},"injectables/FavoriteService.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"classes/Genre.html":{},"controllers/GenreController.html":{},"modules/GenreModule.html":{},"injectables/GenreService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/UpdateFavoriteDto.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGenreDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":330,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["metadata",{"_index":793,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/FavoriteController.html":{},"injectables/FavoriteService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["minlength",{"_index":337,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength(6",{"_index":338,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":802,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":879,"title":{},"body":{"index.html":{}}}],["mlb47719778463_092021",{"_index":315,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["mocks.ts",{"_index":770,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":826,"title":{},"body":{"index.html":{}}}],["module",{"_index":49,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FavoriteModule.html":{},"modules/GameModule.html":{},"modules/GenreModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FavoriteModule.html":{},"modules/GameModule.html":{},"modules/GenreModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":51,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FavoriteModule.html":{},"modules/GameModule.html":{},"modules/GenreModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":890,"title":{},"body":{"index.html":{}}}],["mostrar",{"_index":701,"title":{},"body":{"controllers/UsersController.html":{}}}],["muito",{"_index":331,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["myśliwiec",{"_index":896,"title":{},"body":{"index.html":{}}}],["name",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateGenreDto.html":{},"classes/CreateUserDto.html":{},"controllers/FavoriteController.html":{},"injectables/FavoriteService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/Genre.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["nest",{"_index":815,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":900,"title":{},"body":{"index.html":{}}}],["nestjs/cli",{"_index":872,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/FavoriteController.html":{},"modules/FavoriteModule.html":{},"injectables/FavoriteService.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/GenreController.html":{},"modules/GenreModule.html":{},"injectables/GenreService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":779,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":672,"title":{},"body":{"classes/UpdateGameDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"controllers/GenreController.html":{},"modules/GenreModule.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":782,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenreController.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/ProfileController.html":{},"classes/UpdateFavoriteDto.html":{},"classes/UpdateGenreDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{},"index.html":{}}}],["new",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["node.js",{"_index":808,"title":{},"body":{"index.html":{}}}],["nome",{"_index":297,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["notfoundexception",{"_index":490,"title":{},"body":{"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{}}}],["notfoundexception(`registro",{"_index":495,"title":{},"body":{"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{}}}],["npm",{"_index":820,"title":{},"body":{"index.html":{}}}],["npx",{"_index":873,"title":{},"body":{"index.html":{}}}],["number",{"_index":261,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/Game.html":{}}}],["não",{"_index":323,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{}}}],["o",{"_index":268,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateUserDto.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{}}}],["o.jpg",{"_index":316,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["object",{"_index":731,"title":{},"body":{"injectables/UsersService.html":{}}}],["ocorreu",{"_index":414,"title":{},"body":{"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{}}}],["ojqtgzyopxukgoqxbuma5qg2t5w",{"_index":593,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["onmoduleinit",{"_index":606,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":852,"title":{},"body":{"index.html":{}}}],["ops",{"_index":411,"title":{},"body":{"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{}}}],["option",{"_index":845,"title":{},"body":{"index.html":{}}}],["optional",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Favorite.html":{},"controllers/FavoriteController.html":{},"injectables/FavoriteService.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/Genre.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["ordenada",{"_index":471,"title":{},"body":{"controllers/GameController.html":{}}}],["os",{"_index":444,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UsersController.html":{}}}],["ou",{"_index":322,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["out",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FavoriteModule.html":{},"modules/GameModule.html":{},"modules/GenreModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":904,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":777,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["para",{"_index":333,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["param",{"_index":370,"title":{},"body":{"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/FavoriteController.html":{},"injectables/FavoriteService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["partial",{"_index":511,"title":{},"body":{"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/UsersService.html":{}}}],["partialtype",{"_index":669,"title":{},"body":{"classes/UpdateFavoriteDto.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGenreDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createfavoritedto",{"_index":670,"title":{},"body":{"classes/UpdateFavoriteDto.html":{}}}],["partialtype(creategamedto",{"_index":674,"title":{},"body":{"classes/UpdateGameDto.html":{}}}],["partialtype(creategenredto",{"_index":676,"title":{},"body":{"classes/UpdateGenreDto.html":{}}}],["partialtype(createprofiledto",{"_index":678,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["partialtype(createuserdto",{"_index":682,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passport",{"_index":570,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GenreModule.html":{},"modules/UsersModule.html":{}}}],["passportmodule.register",{"_index":144,"title":{},"body":{"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GenreModule.html":{},"modules/UsersModule.html":{}}}],["passportstrategy",{"_index":567,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":572,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["past",{"_index":921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paste",{"_index":863,"title":{},"body":{"index.html":{}}}],["patch",{"_index":369,"title":{},"body":{"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UsersController.html":{}}}],["patch(':id",{"_index":464,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UsersController.html":{}}}],["patch(':id')@apioperation({summary",{"_index":451,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UsersController.html":{}}}],["payload",{"_index":565,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.name",{"_index":580,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pelo",{"_index":367,"title":{},"body":{"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenreController.html":{},"classes/LoginResponseDto.html":{},"controllers/ProfileController.html":{},"controllers/UsersController.html":{}}}],["perfil",{"_index":214,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"controllers/ProfileController.html":{}}}],["perfis",{"_index":628,"title":{},"body":{"controllers/ProfileController.html":{}}}],["please",{"_index":888,"title":{},"body":{"index.html":{}}}],["por",{"_index":445,"title":{},"body":{"controllers/GameController.html":{}}}],["post",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UsersController.html":{}}}],["post()@apioperation({summary",{"_index":359,"title":{},"body":{"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UsersController.html":{}}}],["post()@httpcode(httpstatus.ok)@apioperation({summary",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["precisa",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["prefix",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UsersController.html":{}}}],["press",{"_index":867,"title":{},"body":{"index.html":{}}}],["prisma",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["prisma.favoritecreateinput",{"_index":399,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["prisma.gamecreateinput",{"_index":499,"title":{},"body":{"injectables/GameService.html":{}}}],["prisma.profilecreateinput",{"_index":660,"title":{},"body":{"injectables/ProfileService.html":{}}}],["prisma.service",{"_index":602,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":352,"title":{},"body":{"classes/Favorite.html":{},"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/PrismaService.html":{},"injectables/ProfileService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":604,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":60,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FavoriteModule.html":{},"modules/GameModule.html":{},"modules/GenreModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":157,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"controllers/GameController.html":{},"injectables/UsersService.html":{}}}],["process.env.jwt_secret",{"_index":149,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["production",{"_index":828,"title":{},"body":{"index.html":{}}}],["profile",{"_index":344,"title":{"classes/Profile.html":{}},"body":{"classes/Favorite.html":{},"injectables/FavoriteService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["profile.controller",{"_index":647,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile.dto",{"_index":635,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts",{"_index":291,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["profile.dto.ts:10",{"_index":299,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:16",{"_index":305,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:22",{"_index":296,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.service",{"_index":634,"title":{},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{}}}],["profile/profile.module",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["profileadmin",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{}}}],["profileadmin(@loggeduser",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["profileadmin(user",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["profilecontroller",{"_index":623,"title":{"controllers/ProfileController.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"coverage.html":{}}}],["profileid",{"_index":195,"title":{},"body":{"classes/CreateFavoriteDto.html":{}}}],["profilemodule",{"_index":61,"title":{"modules/ProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profileservice",{"_index":633,"title":{"injectables/ProfileService.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"coverage.html":{},"overview.html":{}}}],["progressive",{"_index":807,"title":{},"body":{"index.html":{}}}],["project",{"_index":836,"title":{},"body":{"index.html":{}}}],["promise",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":193,"title":{"properties.html":{}},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Favorite.html":{},"classes/Game.html":{},"classes/Genre.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Profile.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"properties.html":{}}}],["providers",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FavoriteModule.html":{},"modules/GameModule.html":{},"modules/GenreModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/UsersModule.html":{}}}],["que",{"_index":215,"title":{},"body":{"classes/CreateFavoriteDto.html":{}}}],["read",{"_index":889,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/FavoriteController.html":{},"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["realizar",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{}}}],["recebendo",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["record",{"_index":493,"title":{},"body":{"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{}}}],["reflect",{"_index":792,"title":{},"body":{"dependencies.html":{}}}],["remover",{"_index":439,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UsersController.html":{}}}],["repository",{"_index":818,"title":{},"body":{"index.html":{}}}],["req",{"_index":24,"title":{},"body":{"controllers/AppController.html":{}}}],["req.get('host",{"_index":44,"title":{},"body":{"controllers/AppController.html":{}}}],["req.protocol",{"_index":43,"title":{},"body":{"controllers/AppController.html":{}}}],["request",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FavoriteModule.html":{},"modules/GameModule.html":{},"modules/GenreModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response.dto",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["response.dto.ts",{"_index":590,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["response.dto.ts:13",{"_index":596,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["response.dto.ts:9",{"_index":594,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["results",{"_index":47,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Favorite.html":{},"controllers/FavoriteController.html":{},"modules/FavoriteModule.html":{},"injectables/FavoriteService.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"classes/Genre.html":{},"controllers/GenreController.html":{},"modules/GenreModule.html":{},"injectables/GenreService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/UpdateFavoriteDto.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGenreDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/FavoriteController.html":{},"injectables/FavoriteService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/FavoriteController.html":{},"injectables/FavoriteService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":795,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":823,"title":{},"body":{"index.html":{}}}],["running",{"_index":85,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["rxjs",{"_index":797,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":812,"title":{},"body":{"index.html":{}}}],["se",{"_index":321,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["secret",{"_index":148,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":578,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["select",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FavoriteService.html":{},"injectables/UsersService.html":{}}}],["senha",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["senhas",{"_index":742,"title":{},"body":{"injectables/UsersService.html":{}}}],["ser",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["server",{"_index":84,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["side",{"_index":813,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":150,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Favorite.html":{},"controllers/FavoriteController.html":{},"modules/FavoriteModule.html":{},"injectables/FavoriteService.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"classes/Genre.html":{},"controllers/GenreController.html":{},"modules/GenreModule.html":{},"injectables/GenreService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/UpdateFavoriteDto.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGenreDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":883,"title":{},"body":{"index.html":{}}}],["src/.../game",{"_index":912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logged",{"_index":913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":804,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:15",{"_index":19,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":79,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":82,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:21",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:31",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:15",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:9",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login",{"_index":589,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":583,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:11",{"_index":586,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:19",{"_index":587,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":559,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":564,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:8",{"_index":561,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/logged",{"_index":758,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/favorite/dto/create",{"_index":191,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"coverage.html":{}}}],["src/favorite/dto/update",{"_index":668,"title":{},"body":{"classes/UpdateFavoriteDto.html":{},"coverage.html":{}}}],["src/favorite/entities/favorite.entity.ts",{"_index":342,"title":{},"body":{"classes/Favorite.html":{},"coverage.html":{}}}],["src/favorite/entities/favorite.entity.ts:5",{"_index":349,"title":{},"body":{"classes/Favorite.html":{}}}],["src/favorite/entities/favorite.entity.ts:6",{"_index":350,"title":{},"body":{"classes/Favorite.html":{}}}],["src/favorite/entities/favorite.entity.ts:7",{"_index":347,"title":{},"body":{"classes/Favorite.html":{}}}],["src/favorite/entities/favorite.entity.ts:8",{"_index":351,"title":{},"body":{"classes/Favorite.html":{}}}],["src/favorite/entities/favorite.entity.ts:9",{"_index":348,"title":{},"body":{"classes/Favorite.html":{}}}],["src/favorite/favorite.controller.ts",{"_index":355,"title":{},"body":{"controllers/FavoriteController.html":{},"coverage.html":{}}}],["src/favorite/favorite.controller.ts:16",{"_index":362,"title":{},"body":{"controllers/FavoriteController.html":{}}}],["src/favorite/favorite.controller.ts:24",{"_index":368,"title":{},"body":{"controllers/FavoriteController.html":{}}}],["src/favorite/favorite.module.ts",{"_index":386,"title":{},"body":{"modules/FavoriteModule.html":{}}}],["src/favorite/favorite.service.ts",{"_index":388,"title":{},"body":{"injectables/FavoriteService.html":{},"coverage.html":{}}}],["src/favorite/favorite.service.ts:10",{"_index":391,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["src/favorite/favorite.service.ts:42",{"_index":395,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["src/favorite/favorite.service.ts:51",{"_index":392,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["src/favorite/favorite.service.ts:7",{"_index":390,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["src/game/dto/create",{"_index":230,"title":{},"body":{"classes/CreateGameDto.html":{},"coverage.html":{}}}],["src/game/dto/update",{"_index":671,"title":{},"body":{"classes/UpdateGameDto.html":{},"coverage.html":{}}}],["src/game/entities/game.entity",{"_index":353,"title":{},"body":{"classes/Favorite.html":{}}}],["src/game/entities/game.entity.ts",{"_index":417,"title":{},"body":{"classes/Game.html":{},"coverage.html":{}}}],["src/game/entities/game.entity.ts:10",{"_index":419,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:11",{"_index":426,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:12",{"_index":421,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:4",{"_index":422,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:5",{"_index":425,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:6",{"_index":418,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:7",{"_index":427,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:8",{"_index":423,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:9",{"_index":424,"title":{},"body":{"classes/Game.html":{}}}],["src/game/game.controller.ts",{"_index":430,"title":{},"body":{"controllers/GameController.html":{},"coverage.html":{}}}],["src/game/game.controller.ts:21",{"_index":446,"title":{},"body":{"controllers/GameController.html":{}}}],["src/game/game.controller.ts:29",{"_index":448,"title":{},"body":{"controllers/GameController.html":{}}}],["src/game/game.controller.ts:37",{"_index":435,"title":{},"body":{"controllers/GameController.html":{}}}],["src/game/game.controller.ts:44",{"_index":453,"title":{},"body":{"controllers/GameController.html":{}}}],["src/game/game.controller.ts:53",{"_index":440,"title":{},"body":{"controllers/GameController.html":{}}}],["src/game/game.module.ts",{"_index":477,"title":{},"body":{"modules/GameModule.html":{}}}],["src/game/game.service.ts",{"_index":479,"title":{},"body":{"injectables/GameService.html":{},"coverage.html":{}}}],["src/game/game.service.ts:12",{"_index":484,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:17",{"_index":486,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:26",{"_index":487,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:30",{"_index":482,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:47",{"_index":488,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:53",{"_index":489,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:59",{"_index":483,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:8",{"_index":481,"title":{},"body":{"injectables/GameService.html":{}}}],["src/genre/dto/create",{"_index":284,"title":{},"body":{"classes/CreateGenreDto.html":{},"coverage.html":{}}}],["src/genre/dto/update",{"_index":675,"title":{},"body":{"classes/UpdateGenreDto.html":{},"coverage.html":{}}}],["src/genre/entities/genre.entity",{"_index":428,"title":{},"body":{"classes/Game.html":{}}}],["src/genre/entities/genre.entity.ts",{"_index":514,"title":{},"body":{"classes/Genre.html":{},"coverage.html":{}}}],["src/genre/entities/genre.entity.ts:2",{"_index":516,"title":{},"body":{"classes/Genre.html":{}}}],["src/genre/entities/genre.entity.ts:3",{"_index":517,"title":{},"body":{"classes/Genre.html":{}}}],["src/genre/entities/genre.entity.ts:4",{"_index":515,"title":{},"body":{"classes/Genre.html":{}}}],["src/genre/entities/genre.entity.ts:5",{"_index":518,"title":{},"body":{"classes/Genre.html":{}}}],["src/genre/genre.controller.ts",{"_index":520,"title":{},"body":{"controllers/GenreController.html":{},"coverage.html":{}}}],["src/genre/genre.controller.ts:20",{"_index":522,"title":{},"body":{"controllers/GenreController.html":{}}}],["src/genre/genre.controller.ts:28",{"_index":525,"title":{},"body":{"controllers/GenreController.html":{}}}],["src/genre/genre.controller.ts:36",{"_index":526,"title":{},"body":{"controllers/GenreController.html":{}}}],["src/genre/genre.controller.ts:44",{"_index":528,"title":{},"body":{"controllers/GenreController.html":{}}}],["src/genre/genre.controller.ts:53",{"_index":523,"title":{},"body":{"controllers/GenreController.html":{}}}],["src/genre/genre.module.ts",{"_index":542,"title":{},"body":{"modules/GenreModule.html":{}}}],["src/genre/genre.service.ts",{"_index":544,"title":{},"body":{"injectables/GenreService.html":{},"coverage.html":{}}}],["src/genre/genre.service.ts:11",{"_index":548,"title":{},"body":{"injectables/GenreService.html":{}}}],["src/genre/genre.service.ts:15",{"_index":549,"title":{},"body":{"injectables/GenreService.html":{}}}],["src/genre/genre.service.ts:24",{"_index":550,"title":{},"body":{"injectables/GenreService.html":{}}}],["src/genre/genre.service.ts:28",{"_index":546,"title":{},"body":{"injectables/GenreService.html":{}}}],["src/genre/genre.service.ts:34",{"_index":551,"title":{},"body":{"injectables/GenreService.html":{}}}],["src/genre/genre.service.ts:40",{"_index":552,"title":{},"body":{"injectables/GenreService.html":{}}}],["src/genre/genre.service.ts:46",{"_index":547,"title":{},"body":{"injectables/GenreService.html":{}}}],["src/genre/genre.service.ts:7",{"_index":545,"title":{},"body":{"injectables/GenreService.html":{}}}],["src/main.ts",{"_index":766,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/mocks/game",{"_index":769,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/prisma.module",{"_index":139,"title":{},"body":{"modules/AuthModule.html":{},"modules/FavoriteModule.html":{},"modules/GameModule.html":{},"modules/GenreModule.html":{},"modules/ProfileModule.html":{},"modules/UsersModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":600,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":603,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:10",{"_index":609,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":611,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/profile/dto/create",{"_index":290,"title":{},"body":{"classes/CreateProfileDto.html":{},"coverage.html":{}}}],["src/profile/dto/update",{"_index":677,"title":{},"body":{"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["src/profile/entities/profile.entity.ts",{"_index":616,"title":{},"body":{"classes/Profile.html":{},"coverage.html":{}}}],["src/profile/entities/profile.entity.ts:10",{"_index":621,"title":{},"body":{"classes/Profile.html":{}}}],["src/profile/entities/profile.entity.ts:5",{"_index":618,"title":{},"body":{"classes/Profile.html":{}}}],["src/profile/entities/profile.entity.ts:6",{"_index":622,"title":{},"body":{"classes/Profile.html":{}}}],["src/profile/entities/profile.entity.ts:7",{"_index":620,"title":{},"body":{"classes/Profile.html":{}}}],["src/profile/entities/profile.entity.ts:8",{"_index":619,"title":{},"body":{"classes/Profile.html":{}}}],["src/profile/entities/profile.entity.ts:9",{"_index":617,"title":{},"body":{"classes/Profile.html":{}}}],["src/profile/profile.controller.ts",{"_index":624,"title":{},"body":{"controllers/ProfileController.html":{},"coverage.html":{}}}],["src/profile/profile.controller.ts:16",{"_index":626,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.controller.ts:24",{"_index":629,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.controller.ts:32",{"_index":630,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.controller.ts:40",{"_index":632,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.controller.ts:49",{"_index":627,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.module.ts",{"_index":646,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/profile/profile.service.ts",{"_index":648,"title":{},"body":{"injectables/ProfileService.html":{},"coverage.html":{}}}],["src/profile/profile.service.ts:12",{"_index":649,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:15",{"_index":652,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:19",{"_index":653,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:28",{"_index":654,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:32",{"_index":650,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:47",{"_index":655,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:55",{"_index":656,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:72",{"_index":651,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/users/dto/create",{"_index":307,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":680,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/entities/user.entity",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginResponseDto.html":{},"classes/Profile.html":{}}}],["src/users/entities/user.entity.ts",{"_index":683,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts:2",{"_index":685,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:3",{"_index":688,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:4",{"_index":689,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:5",{"_index":686,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:6",{"_index":687,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:7",{"_index":684,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:8",{"_index":690,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":692,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:26",{"_index":695,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:36",{"_index":700,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:46",{"_index":703,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:54",{"_index":705,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:64",{"_index":698,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":719,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":721,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:15",{"_index":734,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:23",{"_index":723,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:27",{"_index":726,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:33",{"_index":727,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:45",{"_index":728,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:49",{"_index":724,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:69",{"_index":729,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:77",{"_index":730,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:99",{"_index":725,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":824,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":827,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":829,"title":{},"body":{"index.html":{}}}],["started",{"_index":806,"title":{"index.html":{}},"body":{}}],["starter",{"_index":817,"title":{},"body":{"index.html":{}}}],["statements",{"_index":755,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["stay",{"_index":892,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":569,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["street",{"_index":977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":81,"title":{},"body":{"injectables/AppService.html":{},"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Favorite.html":{},"controllers/FavoriteController.html":{},"injectables/FavoriteService.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/Genre.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["studio",{"_index":874,"title":{},"body":{"index.html":{}}}],["summary",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UsersController.html":{}}}],["super",{"_index":573,"title":{},"body":{"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":878,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":902,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":799,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["table",{"_index":776,"title":{},"body":{"coverage.html":{}}}],["tableservice",{"_index":460,"title":{},"body":{"controllers/GameController.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":775,"title":{},"body":{"coverage.html":{}}}],["terminal",{"_index":853,"title":{},"body":{"index.html":{}}}],["test",{"_index":832,"title":{},"body":{"index.html":{}}}],["test:covguidelines",{"_index":835,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":834,"title":{},"body":{"index.html":{}}}],["tests",{"_index":831,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":882,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":613,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":614,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.getappstatus(baseurl",{"_index":46,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(logindto",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.favoriteservice.create(createfavoritedto",{"_index":379,"title":{},"body":{"controllers/FavoriteController.html":{}}}],["this.favoriteservice.findone(id",{"_index":382,"title":{},"body":{"controllers/FavoriteController.html":{}}}],["this.findbyid(id",{"_index":498,"title":{},"body":{"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{}}}],["this.gameservice.create(dto",{"_index":463,"title":{},"body":{"controllers/GameController.html":{}}}],["this.gameservice.delete(id",{"_index":470,"title":{},"body":{"controllers/GameController.html":{}}}],["this.gameservice.findall",{"_index":461,"title":{},"body":{"controllers/GameController.html":{}}}],["this.gameservice.findone(id",{"_index":462,"title":{},"body":{"controllers/GameController.html":{}}}],["this.gameservice.groupgames",{"_index":473,"title":{},"body":{"controllers/GameController.html":{}}}],["this.gameservice.update(id",{"_index":466,"title":{},"body":{"controllers/GameController.html":{}}}],["this.genreservice.create(creategenredto",{"_index":534,"title":{},"body":{"controllers/GenreController.html":{}}}],["this.genreservice.delete(id",{"_index":538,"title":{},"body":{"controllers/GenreController.html":{}}}],["this.genreservice.findall",{"_index":535,"title":{},"body":{"controllers/GenreController.html":{}}}],["this.genreservice.findone(id",{"_index":536,"title":{},"body":{"controllers/GenreController.html":{}}}],["this.genreservice.update(id",{"_index":537,"title":{},"body":{"controllers/GenreController.html":{}}}],["this.jwtservice.sign",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.favorite.create",{"_index":404,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["this.prisma.favorite.findunique",{"_index":415,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["this.prisma.game.create",{"_index":509,"title":{},"body":{"injectables/GameService.html":{}}}],["this.prisma.game.delete",{"_index":513,"title":{},"body":{"injectables/GameService.html":{}}}],["this.prisma.game.findmany({include:{genres:{orderby:{name:'asc",{"_index":491,"title":{},"body":{"injectables/GameService.html":{}}}],["this.prisma.game.findunique",{"_index":494,"title":{},"body":{"injectables/GameService.html":{}}}],["this.prisma.game.update",{"_index":512,"title":{},"body":{"injectables/GameService.html":{}}}],["this.prisma.genre.create",{"_index":556,"title":{},"body":{"injectables/GenreService.html":{}}}],["this.prisma.genre.delete",{"_index":558,"title":{},"body":{"injectables/GenreService.html":{}}}],["this.prisma.genre.findmany",{"_index":554,"title":{},"body":{"injectables/GenreService.html":{}}}],["this.prisma.genre.findmany({include:{games:true},orderby:{name:'asc",{"_index":492,"title":{},"body":{"injectables/GameService.html":{}}}],["this.prisma.genre.findunique",{"_index":555,"title":{},"body":{"injectables/GenreService.html":{}}}],["this.prisma.genre.update",{"_index":557,"title":{},"body":{"injectables/GenreService.html":{}}}],["this.prisma.profile",{"_index":665,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.prisma.profile.create",{"_index":664,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.prisma.profile.delete",{"_index":666,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.prisma.profile.findmany",{"_index":658,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.prisma.profile.findunique",{"_index":659,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.prisma.user",{"_index":747,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.delete",{"_index":751,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.findmany",{"_index":737,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.findunique",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["this.prisma.user.findunique({where",{"_index":579,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.profileservice.create(createprofiledto",{"_index":638,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.delete(id",{"_index":642,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.findall",{"_index":639,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.findone(id",{"_index":640,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.update(id",{"_index":641,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.userselect",{"_index":738,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":710,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.delete(id",{"_index":715,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall",{"_index":712,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(id",{"_index":713,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(id",{"_index":714,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{}}}],["title",{"_index":237,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateProfileDto.html":{},"injectables/FavoriteService.html":{},"classes/Game.html":{},"injectables/GameService.html":{},"classes/Profile.html":{},"injectables/ProfileService.html":{},"miscellaneous/variables.html":{}}}],["todos",{"_index":443,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UsersController.html":{}}}],["token",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{}}}],["touch",{"_index":893,"title":{},"body":{"index.html":{}}}],["trailer",{"_index":273,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["traileryoutubeurl",{"_index":238,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/Game.html":{},"injectables/GameService.html":{},"miscellaneous/variables.html":{}}}],["transformer",{"_index":786,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["true",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"injectables/FavoriteService.html":{},"injectables/UsersService.html":{}}}],["true})@apiproperty({description",{"_index":198,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{}}}],["twitter",{"_index":899,"title":{},"body":{"index.html":{}}}],["type",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Favorite.html":{},"controllers/FavoriteController.html":{},"injectables/FavoriteService.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/Genre.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":673,"title":{},"body":{"classes/UpdateGameDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":816,"title":{},"body":{"index.html":{}}}],["título",{"_index":269,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["ui",{"_index":800,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["um",{"_index":434,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UsersController.html":{}}}],["unauthorizedexception",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["unauthorizedexception('usuário",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception('voc",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":396,"title":{},"body":{"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{}}}],["unit",{"_index":830,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":566,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["unlicensed",{"_index":910,"title":{},"body":{"properties.html":{}}}],["unprocessableentityexception",{"_index":397,"title":{},"body":{"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{}}}],["unprocessableentityexception(lasterrorline",{"_index":510,"title":{},"body":{"injectables/GameService.html":{},"injectables/GenreService.html":{}}}],["update",{"_index":432,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(@param('id",{"_index":465,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UsersController.html":{}}}],["update(id",{"_index":449,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updatedat",{"_index":345,"title":{},"body":{"classes/Favorite.html":{},"classes/Genre.html":{},"classes/Profile.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["updatefavoritedto",{"_index":667,"title":{"classes/UpdateFavoriteDto.html":{}},"body":{"classes/UpdateFavoriteDto.html":{},"coverage.html":{}}}],["updategamedto",{"_index":450,"title":{"classes/UpdateGameDto.html":{}},"body":{"controllers/GameController.html":{},"classes/UpdateGameDto.html":{},"coverage.html":{}}}],["updategenredto",{"_index":527,"title":{"classes/UpdateGenreDto.html":{}},"body":{"controllers/GenreController.html":{},"classes/UpdateGenreDto.html":{},"coverage.html":{}}}],["updateprofiledto",{"_index":631,"title":{"classes/UpdateProfileDto.html":{}},"body":{"controllers/ProfileController.html":{},"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":679,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["url",{"_index":244,"title":{},"body":{"classes/CreateGameDto.html":{},"index.html":{}}}],["useguards",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/UsersController.html":{}}}],["useguards(authguard",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/UsersController.html":{}}}],["user",{"_index":102,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{},"classes/Profile.html":{},"injectables/ProfileService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.decorator",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.decorator.ts",{"_index":759,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":681,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":308,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":326,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:20",{"_index":334,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:25",{"_index":313,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:31",{"_index":317,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:36",{"_index":324,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.isadmin",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["userid",{"_index":292,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["users",{"_index":693,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":720,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":707,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":691,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userselect",{"_index":722,"title":{},"body":{"injectables/UsersService.html":{}}}],["usersmodule",{"_index":62,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":706,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":849,"title":{},"body":{"index.html":{}}}],["usuário",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/UsersController.html":{}}}],["usuário'})@useguards(undefined)@apibearerauth",{"_index":697,"title":{},"body":{"controllers/UsersController.html":{}}}],["usuários",{"_index":711,"title":{},"body":{"controllers/UsersController.html":{}}}],["usuários'})@useguards(undefined)@apibearerauth",{"_index":699,"title":{},"body":{"controllers/UsersController.html":{}}}],["validate",{"_index":560,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":562,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":227,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"dependencies.html":{},"index.html":{}}}],["value",{"_index":733,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":760,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":911,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":908,"title":{},"body":{"properties.html":{}}}],["visualizar",{"_index":447,"title":{},"body":{"controllers/GameController.html":{}}}],["void",{"_index":441,"title":{},"body":{"controllers/GameController.html":{}}}],["want",{"_index":859,"title":{},"body":{"index.html":{}}}],["wars",{"_index":938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["watch",{"_index":825,"title":{},"body":{"index.html":{}}}],["website",{"_index":897,"title":{},"body":{"index.html":{}}}],["working",{"_index":856,"title":{},"body":{"index.html":{}}}],["world",{"_index":957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["year",{"_index":239,"title":{},"body":{"classes/CreateGameDto.html":{},"injectables/FavoriteService.html":{},"classes/Game.html":{},"injectables/GameService.html":{},"miscellaneous/variables.html":{}}}],["yotube",{"_index":245,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["you'd",{"_index":886,"title":{},"body":{"index.html":{}}}],["z",{"_index":329,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*[a",{"_index":328,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["zelda",{"_index":920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zoom",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FavoriteModule.html":{},"modules/GameModule.html":{},"modules/GenreModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppStatus\n                        \n                    \n                \n            \n            \n                \ngetAppStatus(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Status da aplicação!'})\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req } from '@nestjs/common';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { Request } from 'express';\nimport { AppService } from './app.service';\n\n@ApiTags('status')\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  @ApiOperation({\n    summary: 'Status da aplicação!'\n  })\n  getAppStatus(@Req() req: Request ) {\n    const baseUrl = req.protocol + '://' + req.get('host');\n    return this.appService.getAppStatus(baseUrl);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nFavoriteModule\n\nFavoriteModule\n\nAppModule -->\n\nFavoriteModule->AppModule\n\n\n\n\n\nGameModule\n\nGameModule\n\nAppModule -->\n\nGameModule->AppModule\n\n\n\n\n\nGenreModule\n\nGenreModule\n\nAppModule -->\n\nGenreModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            FavoriteModule\n                        \n                        \n                            GameModule\n                        \n                        \n                            GenreModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            ProfileModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { GameModule } from './game/game.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { UsersModule } from './users/users.module';\nimport { ProfileModule } from './profile/profile.module';\nimport { GenreModule } from './genre/genre.module';\nimport { FavoriteModule } from './favorite/favorite.module';\nimport { AuthModule } from './auth/auth.module';\n\n\n@Module({\n  imports: [GameModule, PrismaModule, UsersModule, ProfileModule, GenreModule, FavoriteModule, AuthModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppStatus\n                        \n                    \n                \n            \n            \n                \ngetAppStatus(baseUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    baseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { status: string; docs: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getAppStatus(baseUrl: string) {\n    return {\n      status: 'Server is running! 🚀',\n      docs: baseUrl + '/api',\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                profileAdmin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@HttpCode(HttpStatus.OK)@ApiOperation({summary: 'Realizar login, recebendo token'})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileAdmin\n                        \n                    \n                \n            \n            \n                \nprofileAdmin(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(undefined)@ApiOperation({summary: 'Usuário autenticado'})@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, HttpCode, HttpStatus, Post, UseGuards } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { User } from 'src/users/entities/user.entity';\nimport { AuthService } from './auth.service';\nimport { LoginResponseDto } from './dto/login-response.dto';\nimport { LoginDto } from './dto/login.dto';\nimport { LoggedUser } from './logged-user.decorator';\n\n@Controller('auth')\n@ApiTags('auth')\nexport class AuthController {\n\n  constructor(private readonly authService: AuthService) {}\n\n  @Post()\n  @HttpCode(HttpStatus.OK)\n  @ApiOperation({\n    summary: 'Realizar login, recebendo token',\n  })\n  login(@Body() loginDto: LoginDto): Promise {\n    return this.authService.login(loginDto)\n  }\n\n  @Get()\n  @UseGuards(AuthGuard())\n  @ApiOperation({\n    summary: 'Usuário autenticado',\n  })\n  @ApiBearerAuth()\n  profileAdmin(@LoggedUser() user: User ){\n    return  user ;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './jwt.strategy';\nimport { PassportModule } from '@nestjs/passport';\n\n\n\n\n@Module({\n  imports: [\n    PrismaModule,\n    PassportModule.register({ defaultStrategy: \"jwt\" }),\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: {\n        expiresIn: '1d'\n      }\n\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginDto: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { LoginResponseDto } from './dto/login-response.dto';\nimport { LoginDto } from './dto/login.dto';\nimport * as bcrypt from 'bcrypt';\nimport { JwtService } from '@nestjs/jwt';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  async login(loginDto: LoginDto): Promise {\n    const { name, password } = loginDto;\n\n    const user = await this.prisma.user.findUnique({ where: { name } });\n\n    if (!user) {\n      throw new UnauthorizedException('Usuário e/ou senha inválidos');\n    }\n\n    const isAdmin = await this.prisma.user.findUnique({\n      where: { name },\n      select: { isAdmin: true },\n    });\n\n    // console.log(isAdmin);\n\n    if (user.isAdmin != true) {\n      throw new UnauthorizedException('Você precisa ser administrador!');\n    }\n\n    const isHashValid = await bcrypt.compare(password, user.password);\n\n    if (!isHashValid) {\n      throw new UnauthorizedException('Usuário e/ou senha inválidos');\n    }\n\n    delete user.password;\n\n    return {\n      token: this.jwtService.sign({ name }),\n      user,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateFavoriteDto.html":{"url":"classes/CreateFavoriteDto.html","title":"class - CreateFavoriteDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFavoriteDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/favorite/dto/create-favorite.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                games\n                            \n                            \n                                profileId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        games\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID(undefined, {each: true})@ApiProperty({description: 'Games favoritos', example: '[\"17cbd74e-91dd-43ae-a8d9-eae123b0aad5\", \"4db1e332-c59f-4e21-83c4-847e3410eb5a\"]'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/favorite/dto/create-favorite.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID()@ApiProperty({description: 'ID do perfil que está adicionando aos favoritos', example: 'b7178ccc-a3b6-42d3-9daa-a695ff43f56b'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/favorite/dto/create-favorite.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsUUID } from \"class-validator\";\n\nexport class CreateFavoriteDto {\n  @IsUUID()\n  @ApiProperty({\n    description: 'ID do perfil que está adicionando aos favoritos',\n    example: 'b7178ccc-a3b6-42d3-9daa-a695ff43f56b',\n  })\n  profileId: string;\n\n  @IsUUID(undefined, { each: true })\n  @ApiProperty({\n    description: 'Games favoritos',\n    example: '[\"17cbd74e-91dd-43ae-a8d9-eae123b0aad5\", \"4db1e332-c59f-4e21-83c4-847e3410eb5a\"]',\n  })\n  games: string[]\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateGameDto.html":{"url":"classes/CreateGameDto.html","title":"class - CreateGameDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateGameDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/dto/create-game-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                gamePlayYouTubeUrl\n                            \n                            \n                                genres\n                            \n                            \n                                image\n                            \n                            \n                                imdbScore\n                            \n                            \n                                title\n                            \n                            \n                                trailerYouTubeUrl\n                            \n                            \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Descrição do game', example: 'The game is ...'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create-game-dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gamePlayYouTubeUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsUrl()@ApiProperty({description: 'Url yotube gameplay', example: 'https://youtu.be/p4QG59y6FGE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create-game-dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        genres\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID(undefined, {each: true})@ApiProperty({description: 'Generos', example: '[\"29caef02-2d16-490b-871a-b0d0acdc9722\"]'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create-game-dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Url da imagem', example: 'https://cloudfront-us-east-1.images.arcpublishing.com/infobae/K3BXUZZJ65CXRHTUVVUXDG7AFE.jpg'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create-game-dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imdbScore\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({description: 'Avaliação do game de 0 a 5', example: 5})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create-game-dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'O título do game', example: 'League of Legends'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create-game-dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trailerYouTubeUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsUrl()@ApiProperty({description: 'Trailer do game', example: 'https://youtu.be/mDYqT0_9VR4'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create-game-dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        year\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({description: 'Ano de criação do game', example: 2013})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create-game-dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsNumber, IsString, IsUrl, IsUUID } from \"class-validator\";\n\nexport class CreateGameDto{\n  @IsString()\n  @ApiProperty({\n    description: 'O título do game',\n    example: 'League of Legends'\n  })\n  title: string;\n  @IsString()\n  @ApiProperty({\n    description: 'Descrição do game',\n    example: 'The game is ...'\n  })\n  description: string;\n  @IsNumber()\n  @ApiProperty({\n    description: 'Ano de criação do game',\n    example: 2013\n  })\n  year: number;\n  @IsString()\n  @ApiProperty({\n    description: 'Url da imagem',\n    example: 'https://cloudfront-us-east-1.images.arcpublishing.com/infobae/K3BXUZZJ65CXRHTUVVUXDG7AFE.jpg'\n  })\n  image: string;\n  @IsNumber()\n  @ApiProperty({\n    description: 'Avaliação do game de 0 a 5',\n    example: 5\n  })\n  imdbScore: number;\n  @IsString()\n  @IsUrl()\n  @ApiProperty({\n    description: 'Url yotube gameplay',\n    example: 'https://youtu.be/p4QG59y6FGE'\n  })\n  gamePlayYouTubeUrl: string;\n  @IsString()\n  @IsUrl()\n  @ApiProperty({\n    description: 'Trailer do game',\n    example: 'https://youtu.be/mDYqT0_9VR4'\n  })\n  trailerYouTubeUrl: string;\n  @IsUUID(undefined, {each : true})\n  @ApiProperty({\n    description: 'Generos',\n    example: '[\"29caef02-2d16-490b-871a-b0d0acdc9722\"]',\n  })\n  genres: string[]\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateGenreDto.html":{"url":"classes/CreateGenreDto.html","title":"class - CreateGenreDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateGenreDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/genre/dto/create-genre.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Gênero do game', example: 'Luta'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/genre/dto/create-genre.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\"\nimport { IsString } from \"class-validator\"\n\nexport class CreateGenreDto {\n  @IsString()\n  @ApiProperty({\n    description: 'Gênero do game',\n    example: 'Luta'\n  })\n  name: string\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProfileDto.html":{"url":"classes/CreateProfileDto.html","title":"class - CreateProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/dto/create-profile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                image\n                            \n                            \n                                title\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl()@ApiProperty({description: 'Imagem de perfil', example: 'https://m.media-amazon.com/images/I/71CPNYUJQnL._AC_SX425_.jpg'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profile/dto/create-profile.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Nome do perfil do usuário', example: 'alaricodasneves'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profile/dto/create-profile.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID()@ApiProperty({description: 'ID do usuário do perfil', example: '327d06c5-ea6c-4482-940b-6922bdbd5f0c'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profile/dto/create-profile.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\"\nimport { IsString, IsUrl, IsUUID } from \"class-validator\"\n\nexport class CreateProfileDto {\n  @IsString()\n  @ApiProperty({\n    description: 'Nome do perfil do usuário',\n    example: 'alaricodasneves'\n  })\n  title: string\n  @IsUUID()\n  @ApiProperty({\n    description: 'ID do usuário do perfil',\n    example: '327d06c5-ea6c-4482-940b-6922bdbd5f0c',\n  })\n  userId: string;\n  @IsUrl()\n  @ApiProperty({\n    description: 'Imagem de perfil',\n    example: 'https://m.media-amazon.com/images/I/71CPNYUJQnL._AC_SX425_.jpg'\n  })\n  image: string\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPassword\n                            \n                            \n                                image\n                            \n                            \n                                isAdmin\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Confirmação da senha do usuário', example: 'Abcd@1234'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl()@ApiProperty({description: 'Imagem de perfil do usuário', example: 'https://http2.mlstatic.com/D_NQ_NP_965824-MLB47719778463_092021-O.jpg'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@ApiProperty({description: 'Informação se é ou não administrador'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'O nome do usuário', example: 'AlaorRibeiro'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(6)@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'Senha muito fraca'})@ApiProperty({description: 'Senha do usuário para login', example: 'Abcd@1234'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\"\nimport { IsBoolean, IsString, IsUrl, Matches, MinLength } from \"class-validator\"\n\nexport class CreateUserDto {\n  @IsString()\n  @ApiProperty({\n    description: 'O nome do usuário',\n    example: 'AlaorRibeiro'\n  })\n  name: string\n  @IsString()\n  @MinLength(6)\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'Senha muito fraca',\n  })\n  @ApiProperty({\n    description: 'Senha do usuário para login',\n    example: 'Abcd@1234',\n  })\n  password: string\n  @ApiProperty({\n    description: 'Confirmação da senha do usuário',\n    example: 'Abcd@1234',\n  })\n  confirmPassword: string;\n  @IsUrl()\n  @ApiProperty({\n    description: 'Imagem de perfil do usuário',\n    example: 'https://http2.mlstatic.com/D_NQ_NP_965824-MLB47719778463_092021-O.jpg',\n  })\n  image: string\n  @IsBoolean()\n  @ApiProperty({\n    description: 'Informação se é ou não administrador',\n  })\n  isAdmin: boolean\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Favorite.html":{"url":"classes/Favorite.html","title":"class - Favorite","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Favorite\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/favorite/entities/favorite.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                games\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                profile\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/favorite/entities/favorite.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        games\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Game[]\n\n                    \n                \n                    \n                        \n                                Defined in src/favorite/entities/favorite.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/favorite/entities/favorite.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Profile\n\n                    \n                \n                    \n                        \n                                Defined in src/favorite/entities/favorite.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/favorite/entities/favorite.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Profile } from \"@prisma/client\";\nimport { Game } from \"src/game/entities/game.entity\";\n\nexport class Favorite {\n  id?: string;\n  profile?: Profile;\n  createdAt?: Date\n  updatedAt?: Date\n  games?: Game[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FavoriteController.html":{"url":"controllers/FavoriteController.html","title":"controller - FavoriteController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FavoriteController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/favorite/favorite.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                favorite\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createFavoriteDto: CreateFavoriteDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar lista de favoritos'})\n                \n            \n\n            \n                \n                    Defined in src/favorite/favorite.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createFavoriteDto\n                                    \n                                                CreateFavoriteDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Listar jogos favoritos pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/favorite/favorite.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { FavoriteService } from './favorite.service';\nimport { CreateFavoriteDto } from './dto/create-favorite.dto';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { Favorite } from './entities/favorite.entity';\n\n@ApiTags('favorite')\n@Controller('favorite')\nexport class FavoriteController {\n  constructor(private readonly favoriteService: FavoriteService) {}\n\n  @Post()\n  @ApiOperation({\n    summary: 'Criar lista de favoritos'\n  })\n  create(@Body() createFavoriteDto: CreateFavoriteDto) {\n    return this.favoriteService.create(createFavoriteDto);\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Listar jogos favoritos pelo ID'\n  })\n  findOne(@Param('id') id: string) {\n    return this.favoriteService.findOne(id);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FavoriteModule.html":{"url":"modules/FavoriteModule.html","title":"module - FavoriteModule","body":"\n                   \n\n\n\n\n    Modules\n    FavoriteModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FavoriteModule\n\n\n\ncluster_FavoriteModule_imports\n\n\n\ncluster_FavoriteModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nFavoriteModule\n\nFavoriteModule\n\nFavoriteModule -->\n\nPrismaModule->FavoriteModule\n\n\n\n\n\nFavoriteService\n\nFavoriteService\n\nFavoriteModule -->\n\nFavoriteService->FavoriteModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/favorite/favorite.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FavoriteService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FavoriteController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FavoriteService } from './favorite.service';\nimport { FavoriteController } from './favorite.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule],\n  controllers: [FavoriteController],\n  providers: [FavoriteService]\n})\nexport class FavoriteModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FavoriteService.html":{"url":"injectables/FavoriteService.html","title":"injectable - FavoriteService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FavoriteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/favorite/favorite.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findOne\n                            \n                            \n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/favorite/favorite.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createFavoriteDto: CreateFavoriteDto)\n                \n            \n\n\n            \n                \n                    Defined in src/favorite/favorite.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createFavoriteDto\n                                    \n                                                CreateFavoriteDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/favorite/favorite.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: Error)\n                \n            \n\n\n            \n                \n                    Defined in src/favorite/favorite.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnprocessableEntityException } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { CreateFavoriteDto } from './dto/create-favorite.dto';\n\n@Injectable()\nexport class FavoriteService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  create(createFavoriteDto: CreateFavoriteDto) {\n    const data: Prisma.FavoriteCreateInput = {\n      profile: {\n        connect: {id: createFavoriteDto.profileId}\n      },\n     games: {\n      connect: createFavoriteDto.games.map((gameId) => ({\n        id: gameId,\n      })),\n     },\n    }\n    return this.prisma.favorite.create({\n      data,\n      select: {\n        id: true,\n        profile: {\n          select: {\n            title: true,\n            image: true,\n          }\n        },\n        games: {\n          select: {\n            title: true,\n            genres: true,\n          }\n        }\n      },\n\n     }).catch(this.handleError)\n  }\n\n  handleError(error: Error): undefined {\n    const errorLines = error.message?.split('\\n');\n    const lastErrorLine = errorLines[errorLines.length - 1]?.trim();\n    throw new UnprocessableEntityException(\n      lastErrorLine || 'Ops algum erro ocorreu!',\n    );\n  }\n\n\n  findOne(id: string) {\n    return this.prisma.favorite.findUnique({\n      where: { id },\n      include: {\n        profile: {\n          select: {\n            title: true,\n            image: true,\n          }\n        },\n        games: {\n          select: {\n            id: true,\n            title: true,\n            description: true,\n            image: true,\n            year: true,\n            genres: true,\n          }\n        }\n      }\n    })\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Game.html":{"url":"classes/Game.html","title":"class - Game","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Game\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/entities/game.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                description\n                            \n                            \n                                    Optional\n                                gamePlayYouTubeUrl\n                            \n                            \n                                    Optional\n                                genres\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                image\n                            \n                            \n                                    Optional\n                                imdbScore\n                            \n                            \n                                    Optional\n                                title\n                            \n                            \n                                    Optional\n                                trailerYouTubeUrl\n                            \n                            \n                                    Optional\n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/game.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        gamePlayYouTubeUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/game.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        genres\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Genre[]\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/game.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/game.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/game.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        imdbScore\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/game.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/game.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        trailerYouTubeUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/game.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        year\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/game.entity.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Genre } from \"src/genre/entities/genre.entity\";\n\nexport class Game {\n  id?: string;\n  title?: string;\n  description?: string;\n  year?: number;\n  image?: string\n  imdbScore?: number;\n  gamePlayYouTubeUrl?: string;\n  trailerYouTubeUrl?: string\n  genres?: Genre[];\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GameController.html":{"url":"controllers/GameController.html","title":"controller - GameController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GameController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/game.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                game\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateGameDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar um game!'})\n                \n            \n\n            \n                \n                    Defined in src/game/game.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateGameDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Remover um game pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/game/game.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'HOMEPAGE (Lista todos os games por gênero)'})\n                \n            \n\n            \n                \n                    Defined in src/game/game.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Visualizar um game!'})\n                \n            \n\n            \n                \n                    Defined in src/game/game.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, dto: UpdateGameDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Editar um game pelo ID!'})\n                \n            \n\n            \n                \n                    Defined in src/game/game.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateGameDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpCode, HttpStatus, Param, Patch, Post, UseGuards } from \"@nestjs/common\";\nimport { CreateGameDto } from \"./dto/create-game-dto\";\nimport { GameService } from \"./game.service\";\nimport { ApiBearerAuth, ApiOperation, ApiTags } from \"@nestjs/swagger\";\nimport { Game } from \"./entities/game.entity\";\nimport { UpdateGameDto } from \"./dto/update-game-dto\";\nimport { AuthGuard } from \"@nestjs/passport\";\n\n@ApiTags('game')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('game')\nexport class GameController {\n  tableService: any;\n  constructor (private gameService: GameService) {}\n\n  @Get()\n  @ApiOperation({\n    summary: 'HOMEPAGE (Lista todos os games por gênero)'\n  })\n  findAll(): Promise {\n    return this.gameService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Visualizar um game!'\n  })\n  findOne(@Param('id') id: string): Promise{\n    return this.gameService.findOne(id)\n  }\n\n  @Post()\n  @ApiOperation({\n    summary: 'Criar um game!'\n  })\n  create(@Body() dto: CreateGameDto) {\n    return this.gameService.create(dto);\n  }\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Editar um game pelo ID!'\n  })\n  update(@Param('id') id: string, @Body() dto: UpdateGameDto): Promise{\n    return this.gameService.update(id, dto);\n  }\n\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: 'Remover um game pelo ID',\n  })\n  delete(@Param('id') id: string) {\n    this.gameService.delete(id);\n  }\n\n  // @Get()\n  // @ApiOperation({\n  //   summary: 'Lista ordenada'\n  // })\n  // groupGames(){\n  //   this.gameService.groupGames()\n  // }\n\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GameModule.html":{"url":"modules/GameModule.html","title":"module - GameModule","body":"\n                   \n\n\n\n\n    Modules\n    GameModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GameModule\n\n\n\ncluster_GameModule_imports\n\n\n\ncluster_GameModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nGameModule\n\nGameModule\n\nGameModule -->\n\nPrismaModule->GameModule\n\n\n\n\n\nGameService\n\nGameService\n\nGameModule -->\n\nGameService->GameModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/game/game.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GameService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GameController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { GameController } from './game.controller';\nimport { GameService } from './game.service';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: \"jwt\" }),],\n  controllers: [GameController],\n  providers: [GameService],\n})\nexport class GameModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameService.html":{"url":"injectables/GameService.html","title":"injectable - GameService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/game.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                handleError\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/game/game.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateGameDto)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateGameDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: Error)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: any)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException, UnprocessableEntityException } from \"@nestjs/common\";\nimport { Genre, Prisma } from \"@prisma/client\";\nimport { PrismaService } from \"src/prisma/prisma.service\";\nimport { CreateGameDto } from \"./dto/create-game-dto\";\nimport { Game } from \"./entities/game.entity\";\n\n@Injectable()\nexport class GameService {\n\n  constructor(private readonly prisma: PrismaService){}\n\n   findAll(): Promise{\n    // return this.prisma.game.findMany({include:{genres:{orderBy:{name:'asc'}}}})\n    return this.prisma.genre.findMany({include:{games:true},orderBy:{name:'asc'}})\n  }\n\n  async findById(id: string): Promise{\n    const record = await this.prisma.game.findUnique({ where: { id } });\n\n    if (!record) {\n      throw new NotFoundException(`Registro com o '${id}' não encontrado.`)\n    }\n    return record;\n  }\n\n  async findOne(id: string): Promise {\n    return this.findById(id);\n  }\n\n  create(dto: CreateGameDto){\n    const data: Prisma.GameCreateInput = {\n      title: dto.title,\n      image: dto.image,\n      description: dto.description,\n      year: dto.year,\n      imdbScore: dto.imdbScore,\n      trailerYouTubeUrl: dto.trailerYouTubeUrl,\n      gamePlayYouTubeUrl: dto.gamePlayYouTubeUrl,\n      genres: {\n        connect: dto.genres.map((genresId) =>({ id: genresId,}))\n      }\n    }\n\n    return this.prisma.game.create({ data }).catch(this.handleError);\n  }\n\n  handleError(error: Error): undefined {\n    const errorLines = error.message?.split('\\n');\n    const lastErrorLine = errorLines[errorLines.length - 1]?.trim();\n    throw new UnprocessableEntityException(lastErrorLine || \"Ops algum erro ocorreu!\");\n;  }\n\n  async update(id: string, dto: any): Promise {\n    await this.findById(id);\n    const data: Partial = {...dto}\n    return this.prisma.game.update({ where: {id}, data }).catch(this.handleError);\n  }\n\n  async delete(id: string){\n    await this.findById(id);\n    await this.prisma.game.delete({ where: { id } });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Genre.html":{"url":"classes/Genre.html","title":"class - Genre","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Genre\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/genre/entities/genre.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/genre/entities/genre.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/genre/entities/genre.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/genre/entities/genre.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/genre/entities/genre.entity.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Genre {\n  id?: string\n  name: string\n  createdAt?: Date\n  updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GenreController.html":{"url":"controllers/GenreController.html","title":"controller - GenreController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GenreController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/genre/genre.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                genre\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createGenreDto: CreateGenreDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar um gênero'})\n                \n            \n\n            \n                \n                    Defined in src/genre/genre.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createGenreDto\n                                    \n                                                CreateGenreDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Remover um gênero pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/genre/genre.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todos os gêneros'})\n                \n            \n\n            \n                \n                    Defined in src/genre/genre.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Listar um gênero pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/genre/genre.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateGenreDto: UpdateGenreDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Editar um gênero pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/genre/genre.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateGenreDto\n                                    \n                                                UpdateGenreDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, HttpCode, HttpStatus, UseGuards } from '@nestjs/common';\nimport { GenreService } from './genre.service';\nimport { CreateGenreDto } from './dto/create-genre.dto';\nimport { UpdateGenreDto } from './dto/update-genre.dto';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiTags('genre')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('genre')\nexport class GenreController {\n  constructor(private readonly genreService: GenreService) {}\n\n\n  @Post()\n  @ApiOperation({\n    summary: 'Criar um gênero'\n  })\n  create(@Body() createGenreDto: CreateGenreDto) {\n    return this.genreService.create(createGenreDto);\n  }\n\n  @Get()\n  @ApiOperation({\n    summary: 'Listar todos os gêneros'\n  })\n  findAll() {\n    return this.genreService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Listar um gênero pelo ID'\n  })\n  findOne(@Param('id') id: string) {\n    return this.genreService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Editar um gênero pelo ID'\n  })\n  update(@Param('id') id: string, @Body() updateGenreDto: UpdateGenreDto) {\n    return this.genreService.update(id, updateGenreDto);\n  }\n\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: 'Remover um gênero pelo ID'\n  })\n  delete(@Param('id') id: string) {\n    return this.genreService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GenreModule.html":{"url":"modules/GenreModule.html","title":"module - GenreModule","body":"\n                   \n\n\n\n\n    Modules\n    GenreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GenreModule\n\n\n\ncluster_GenreModule_imports\n\n\n\ncluster_GenreModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nGenreModule\n\nGenreModule\n\nGenreModule -->\n\nPrismaModule->GenreModule\n\n\n\n\n\nGenreService\n\nGenreService\n\nGenreModule -->\n\nGenreService->GenreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/genre/genre.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GenreService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GenreController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GenreService } from './genre.service';\nimport { GenreController } from './genre.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: \"jwt\" }),],\n  controllers: [GenreController],\n  providers: [GenreService]\n})\nexport class GenreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GenreService.html":{"url":"injectables/GenreService.html","title":"injectable - GenreService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GenreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/genre/genre.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                handleError\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/genre/genre.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateGenreDto)\n                \n            \n\n\n            \n                \n                    Defined in src/genre/genre.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateGenreDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/genre/genre.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/genre/genre.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/genre/genre.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/genre/genre.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: Error)\n                \n            \n\n\n            \n                \n                    Defined in src/genre/genre.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: any)\n                \n            \n\n\n            \n                \n                    Defined in src/genre/genre.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException, UnprocessableEntityException } from \"@nestjs/common\";\nimport { PrismaService } from \"src/prisma/prisma.service\";\nimport { CreateGenreDto } from \"./dto/create-genre.dto\";\nimport { Genre } from \"./entities/genre.entity\";\n\n@Injectable()\nexport class GenreService {\n\n  constructor(private readonly prisma: PrismaService){}\n\n  findAll(): Promise {\n    return this.prisma.genre.findMany()\n  }\n\n  async findById(id: string): Promise{\n    const record = await this.prisma.genre.findUnique({ where: { id } });\n\n    if (!record) {\n      throw new NotFoundException(`Registro com o '${id}' não encontrado.`)\n    }\n    return record;\n  }\n\n  async findOne(id: string): Promise {\n    return this.findById(id);\n  }\n\n  create(dto: CreateGenreDto): Promise {\n    const data: Genre = {...dto}\n\n    return this.prisma.genre.create({ data }).catch(this.handleError);\n  }\n\n  handleError(error: Error): undefined {\n    const errorLines = error.message?.split('\\n');\n    const lastErrorLine = errorLines[errorLines.length - 1]?.trim();\n    throw new UnprocessableEntityException(lastErrorLine || \"Ops algum erro ocorreu!\");\n;  }\n\n  async update(id: string, dto: any): Promise {\n    await this.findById(id);\n    const data: Partial = {...dto}\n    return this.prisma.genre.update({ where: {id}, data }).catch(this.handleError);\n  }\n\n  async delete(id: string){\n    await this.findById(id);\n    await this.prisma.genre.delete({ where: { id } });\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from \"@nestjs/common\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { ExtractJwt, Strategy } from \"passport-jwt\";\nimport { PrismaService } from \"src/prisma/prisma.service\";\n\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly prisma: PrismaService) {\n    super({\n     jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n     ignoreExpiration: false,\n     secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n async validate(payload: { name: string }){\n    const user = await this.prisma.user.findUnique({where: { name: payload.name }})\n\n    if(!user) {\n      throw new UnauthorizedException(\n        'Usuário não existe',\n      )\n    }\n    delete user.password;\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'Nome do usuário', example: 'KingXimbinha'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'Senha do usuário', example: 'Abcd@1234'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class LoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Nome do usuário',\n    example: 'KingXimbinha',\n  })\n  name: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Senha do usuário',\n    example: 'Abcd@1234',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResponseDto.html":{"url":"classes/LoginResponseDto.html","title":"class - LoginResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'JWT gerado pelo login', example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoia2luZ3hpbWJpbmhhIiwiaWF0IjoxNjU3OTk1MzQ4LCJleHAiOjE2NTgwODE3NDh9.bmqgDB2gzhX_Uue-OJqTGZYOpXukgOQXbUmA5qG2t5w'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-response.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Dados do usuário autenticado'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-response.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { User } from 'src/users/entities/user.entity'\n\nexport class LoginResponseDto {\n  @ApiProperty({\n    description: 'JWT gerado pelo login',\n    example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoia2luZ3hpbWJpbmhhIiwiaWF0IjoxNjU3OTk1MzQ4LCJleHAiOjE2NTgwODE3NDh9.bmqgDB2gzhX_Uue-OJqTGZYOpXukgOQXbUmA5qG2t5w',\n  })\n  token: string;\n  @ApiProperty({\n    description: 'Dados do usuário autenticado',\n  })\n  user: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_PrismaModule_exports\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService]\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Profile.html":{"url":"classes/Profile.html","title":"class - Profile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Profile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/entities/profile.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                image\n                            \n                            \n                                    Optional\n                                title\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/profile/entities/profile.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/profile/entities/profile.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/profile/entities/profile.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/profile/entities/profile.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/profile/entities/profile.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/profile/entities/profile.entity.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from \"src/users/entities/user.entity\";\n\n\nexport class Profile {\n  id?: string;\n  user?: User;\n  title?: string;\n  image?: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProfileController.html":{"url":"controllers/ProfileController.html","title":"controller - ProfileController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProfileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                profile\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createProfileDto: CreateProfileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar um perfil'})\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProfileDto\n                                    \n                                                CreateProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Remover perfil pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todos os perfis'})\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Listar um perfil pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateProfileDto: UpdateProfileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Editar um perfil pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProfileDto\n                                    \n                                                UpdateProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, HttpCode, HttpStatus } from '@nestjs/common';\nimport { ProfileService } from './profile.service';\nimport { CreateProfileDto } from './dto/create-profile.dto';\nimport { UpdateProfileDto } from './dto/update-profile.dto';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('profile')\n@Controller('profile')\nexport class ProfileController {\n  constructor(private readonly profileService: ProfileService) {}\n\n  @Post()\n  @ApiOperation({\n    summary: 'Criar um perfil'\n  })\n  create(@Body() createProfileDto: CreateProfileDto) {\n    return this.profileService.create(createProfileDto);\n  }\n\n  @Get()\n  @ApiOperation({\n    summary: 'Listar todos os perfis'\n  })\n  findAll() {\n    return this.profileService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Listar um perfil pelo ID'\n  })\n  findOne(@Param('id') id: string) {\n    return this.profileService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Editar um perfil pelo ID'\n  })\n  update(@Param('id') id: string, @Body() updateProfileDto: UpdateProfileDto) {\n    return this.profileService.update(id, updateProfileDto);\n  }\n\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: 'Remover perfil pelo ID'\n  })\n  delete(@Param('id') id: string) {\n    return this.profileService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_providers\n\n\n\ncluster_ProfileModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nPrismaModule->ProfileModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/profile/profile.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProfileService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProfileController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProfileService } from './profile.service';\nimport { ProfileController } from './profile.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule],\n  controllers: [ProfileController],\n  providers: [ProfileService]\n})\nexport class ProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                handleError\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/profile/profile.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createProfileDto: CreateProfileDto)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProfileDto\n                                    \n                                                CreateProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: Error)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, createProfileDto)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createProfileDto\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException,\n  UnprocessableEntityException,\n} from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { CreateProfileDto } from './dto/create-profile.dto';\nimport { Profile } from './entities/profile.entity';\n\n@Injectable()\nexport class ProfileService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  findAll(): Promise {\n    return this.prisma.profile.findMany();\n  }\n\n  async findById(id: string): Promise {\n    const record = await this.prisma.profile.findUnique({ where: { id } });\n\n    if (!record) {\n      throw new NotFoundException(`Registro com o '${id}' não encontrado.`);\n    }\n    return record;\n  }\n\n  async findOne(id: string): Promise {\n    return this.findById(id);\n  }\n\n  create(createProfileDto: CreateProfileDto) {\n    const data:  Prisma.ProfileCreateInput = {\n      user: {\n        connect: {\n          id: createProfileDto.userId,\n        },\n      },\n      title: createProfileDto.title,\n      image: createProfileDto.image,\n\n    };\n\n    return this.prisma.profile.create({ data }).catch(this.handleError);\n  }\n\n  handleError(error: Error): undefined {\n    const errorLines = error.message?.split('\\n');\n    const lastErrorLine = errorLines[errorLines.length - 1]?.trim();\n    throw new UnprocessableEntityException(\n      lastErrorLine || 'Ops algum erro ocorreu!',\n    );\n  }\n\n  async update(id: string, createProfileDto): Promise {\n    await this.findById(id);\n    const data:  Prisma.ProfileCreateInput = {\n      user: {\n        connect: {\n          id: createProfileDto.userId,\n        },\n      },\n      title: createProfileDto.title,\n      image: createProfileDto.image,\n\n    };\n    return this.prisma.profile\n      .update({ where: { id }, data })\n      .catch(this.handleError);\n  }\n\n  async delete(id: string) {\n    await this.findById(id);\n    await this.prisma.profile.delete({ where: { id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateFavoriteDto.html":{"url":"classes/UpdateFavoriteDto.html","title":"class - UpdateFavoriteDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFavoriteDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/favorite/dto/update-favorite.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateFavoriteDto } from './create-favorite.dto';\n\nexport class UpdateFavoriteDto extends PartialType(CreateFavoriteDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateGameDto.html":{"url":"classes/UpdateGameDto.html","title":"class - UpdateGameDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateGameDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/dto/update-game-dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/mapped-types\";\nimport { CreateGameDto } from \"./create-game-dto\";\n\nexport class UpdateGameDto extends PartialType(CreateGameDto){\n  \n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateGenreDto.html":{"url":"classes/UpdateGenreDto.html","title":"class - UpdateGenreDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateGenreDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/genre/dto/update-genre.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateGenreDto } from './create-genre.dto';\n\nexport class UpdateGenreDto extends PartialType(CreateGenreDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileDto.html":{"url":"classes/UpdateProfileDto.html","title":"class - UpdateProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/dto/update-profile.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateProfileDto } from './create-profile.dto';\n\nexport class UpdateProfileDto extends PartialType(CreateProfileDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                image\n                            \n                            \n                                isAdmin\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  id?: string\n  name: string\n  password: string\n  image: string\n  isAdmin: boolean\n  createdAt?: Date\n  updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar um usuário'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Remover um usuário'})@UseGuards(undefined)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todos os usuários'})@UseGuards(undefined)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Mostrar um usuário pelo ID'})@UseGuards(undefined)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Atualizar um usuário'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiTags('users')\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  @ApiOperation({\n    summary: 'Criar um usuário',\n  })\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.usersService.create(createUserDto);\n  }\n\n  @Get()\n  @ApiOperation({\n    summary: 'Listar todos os usuários',\n  })\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  findAll() {\n    return this.usersService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Mostrar um usuário pelo ID',\n  })\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Atualizar um usuário',\n  })\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.usersService.update(id, updateUserDto);\n  }\n\n  @Delete(':id')\n  @ApiOperation({\n    summary: 'Remover um usuário',\n  })\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  delete(@Param('id') id: string) {\n    return this.usersService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nPrismaModule->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: \"jwt\" }),],\n  controllers: [UsersController],\n  providers: [UsersService]\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                userSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                handleError\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: Error)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userSelect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: true,\n    name: true,\n    password: false,\n    image: true,\n    isAdmin: true,\n    createdAt: true,\n    updatedAt: true,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n  UnprocessableEntityException,\n} from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User } from './entities/user.entity';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class UsersService {\n  private userSelect = {\n    id: true,\n    name: true,\n    password: false,\n    image: true,\n    isAdmin: true,\n    createdAt: true,\n    updatedAt: true,\n  };\n\n  constructor(private readonly prisma: PrismaService) {}\n\n  findAll(): Promise {\n    return this.prisma.user.findMany({\n      select: this.userSelect,\n    });\n  }\n\n  async findById(id: string): Promise {\n    const record = await this.prisma.user.findUnique({\n      where: { id },\n      select: this.userSelect,\n    });\n\n    if (!record) {\n      throw new NotFoundException(`Registro com o '${id}' não encontrado.`);\n    }\n    return record;\n  }\n\n  async findOne(id: string): Promise {\n    return this.findById(id);\n  }\n\n  async create(dto: CreateUserDto): Promise {\n    if (dto.password != dto.confirmPassword) {\n      throw new BadRequestException('As senhas devem ser iguais!')\n    }\n\n    delete dto.confirmPassword;\n\n    const data: User = {\n      ...dto,\n      password: await bcrypt.hash(dto.password, 12),\n    };\n\n    return this.prisma.user\n      .create({\n        data,\n        select: this.userSelect,\n      })\n      .catch(this.handleError);\n  }\n\n  handleError(error: Error): undefined {\n    const errorLines = error.message?.split('\\n');\n    const lastErrorLine = errorLines[errorLines.length - 1]?.trim();\n    throw new UnprocessableEntityException(\n      lastErrorLine || 'Ops algum erro ocorreu!',\n    );\n  }\n\n  async update(id: string, dto: UpdateUserDto): Promise {\n    await this.findById(id);\n\n    if(dto.password) {\n      if(dto.password != dto.confirmPassword){\n        throw new BadRequestException('As senhas devem ser iguais!')\n      }\n    }\n\n    delete dto.confirmPassword;\n\n    const data: Partial = { ...dto };\n\n    if (data.password) {\n      data.password = await bcrypt.hash(data.password, 12)\n    }\n\n    return this.prisma.user\n      .update({ where: { id }, data, select: this.userSelect })\n      .catch(this.handleError);\n  }\n\n  async delete(id: string) {\n    await this.findById(id);\n    await this.prisma.user.delete({ where: { id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login-response.dto.ts\n            \n            class\n            LoginResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/logged-user.decorator.ts\n            \n            variable\n            LoggedUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/favorite/dto/create-favorite.dto.ts\n            \n            class\n            CreateFavoriteDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/favorite/dto/update-favorite.dto.ts\n            \n            class\n            UpdateFavoriteDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/favorite/entities/favorite.entity.ts\n            \n            class\n            Favorite\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/favorite/favorite.controller.ts\n            \n            controller\n            FavoriteController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/favorite/favorite.service.ts\n            \n            injectable\n            FavoriteService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/game/dto/create-game-dto.ts\n            \n            class\n            CreateGameDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/game/dto/update-game-dto.ts\n            \n            class\n            UpdateGameDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/game/entities/game.entity.ts\n            \n            class\n            Game\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/game/game.controller.ts\n            \n            controller\n            GameController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/game/game.service.ts\n            \n            injectable\n            GameService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/genre/dto/create-genre.dto.ts\n            \n            class\n            CreateGenreDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/genre/dto/update-genre.dto.ts\n            \n            class\n            UpdateGenreDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/genre/entities/genre.entity.ts\n            \n            class\n            Genre\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/genre/genre.controller.ts\n            \n            controller\n            GenreController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/genre/genre.service.ts\n            \n            injectable\n            GenreService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mocks/game-mocks.ts\n            \n            variable\n            gameMocks\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/profile/dto/create-profile.dto.ts\n            \n            class\n            CreateProfileDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/profile/dto/update-profile.dto.ts\n            \n            class\n            UpdateProfileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/profile/entities/profile.entity.ts\n            \n            class\n            Profile\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/profile/profile.controller.ts\n            \n            controller\n            ProfileController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/profile/profile.service.ts\n            \n            injectable\n            ProfileService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/10)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.4.7\n        \n            @nestjs/core : ^8.4.7\n        \n            @nestjs/jwt : ^9.0.0\n        \n            @nestjs/mapped-types : ^1.0.1\n        \n            @nestjs/passport : ^9.0.0\n        \n            @nestjs/platform-express : ^8.4.7\n        \n            @nestjs/swagger : ^5.2.1\n        \n            @prisma/client : ^4.0.0\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.4.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covGuidelines for running the project.\nCloning the repository.\n1- Click on the repository link.\n2- Above the list of files, click option Code.\n3- To clone the repository using HTTPS, \n4- Open the terminal.\n5- Change the current working directory to the location where you want to have the directory cloned.\n6- Type git clone (clone git) and paste the URL you copied earlier.\n7-Press Enter to create your local clone.\nInstalling the dependencies.\n1- Open the terminal and run the command:\nnpm i -g @nestjs/cli\n2- Installing Class Validator:\nnpm i class-validator class-transformer\n3- Installing Swagger:\nnpm i @nestjs/swagger swagger-ui-express\nRunning the project.\n1- Open the terminal and run:\nRunning project\n1 npm run start:dev\n2 npx prisma studio\n3 Access swagger with browser\nhttp://localhost:3333/api\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FavoriteModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GameModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GenreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_FavoriteModule\n\n\n\ncluster_FavoriteModule_providers\n\n\n\ncluster_GameModule\n\n\n\ncluster_GameModule_providers\n\n\n\ncluster_GenreModule\n\n\n\ncluster_GenreModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nFavoriteModule\n\nFavoriteModule\n\nAppModule -->\n\nFavoriteModule->AppModule\n\n\n\n\n\nGameModule\n\nGameModule\n\nAppModule -->\n\nGameModule->AppModule\n\n\n\n\n\nGenreModule\n\nGenreModule\n\nAppModule -->\n\nGenreModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\nFavoriteModule -->\n\nPrismaModule->FavoriteModule\n\n\n\nGameModule -->\n\nPrismaModule->GameModule\n\n\n\nGenreModule -->\n\nPrismaModule->GenreModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nPrismaModule->ProfileModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nPrismaModule->UsersModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nFavoriteService\n\nFavoriteService\n\nFavoriteModule -->\n\nFavoriteService->FavoriteModule\n\n\n\n\n\nGameService\n\nGameService\n\nGameModule -->\n\nGameService->GameModule\n\n\n\n\n\nGenreService\n\nGenreService\n\nGenreModule -->\n\nGenreService->GenreModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    17 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            gameMocks   (src/.../game-mocks.ts)\n                        \n                        \n                            LoggedUser   (src/.../logged-user.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/mocks/game-mocks.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        gameMocks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    \"id\": \"0b3c46fe-8d1b-4891-82bc-440835270aa2\",\n    \"title\": \"The Legend of Zelda: A Link to the Past\",\n    \"genre\": \"Action\",\n    \"description\": \"A game is ...\",\n    \"year\": 1991,\n    \"image\": \"https://upload.wikimedia.org/wikipedia/pt/thumb/8/83/Donkey_Kong_Country_capa.png/270px-Donkey_Kong_Country_capa.png\",\n    \"imdbScore\": 5,\n    \"trailerYouTubeUrl\": \"https://youtu.be/mDYqT0_9VR4\",\n    \"gamePlayYouTubeUrl\": \"https://youtu.be/p4QG59y6FGE\",\n    \"createdAt\": \"2022-07-05T20:48:48.964Z\",\n    \"updatedAt\": \"2022-07-05T20:48:48.965Z\"\n  },\n  {\n    \"id\": \"46c9903b-41d0-4144-b362-00f7f3102bbf\",\n    \"title\": \"Contra III: The Alien Wars\",\n    \"genre\": \"Action\",\n    \"description\": \"A game is ...\",\n    \"year\": 1991,\n    \"image\": \"https://upload.wikimedia.org/wikipedia/pt/thumb/8/83/Donkey_Kong_Country_capa.png/270px-Donkey_Kong_Country_capa.png\",\n    \"imdbScore\": 5,\n    \"trailerYouTubeUrl\": \"https://youtu.be/mDYqT0_9VR4\",\n    \"gamePlayYouTubeUrl\": \"https://youtu.be/p4QG59y6FGE\",\n    \"createdAt\": \"2022-07-05T20:56:21.186Z\",\n    \"updatedAt\": \"2022-07-05T20:56:21.186Z\"\n  },\n  {\n    \"id\": \"fa11e5a9-a544-4f85-9a69-3abbdc14508d\",\n    \"title\": \"Donkey Kong Country\",\n    \"genre\": \"Adventure\",\n    \"description\": \"A game is ...\",\n    \"year\": 2013,\n    \"image\": \"https://upload.wikimedia.org/wikipedia/pt/thumb/8/83/Donkey_Kong_Country_capa.png/270px-Donkey_Kong_Country_capa.png\",\n    \"imdbScore\": 5,\n    \"trailerYouTubeUrl\": \"https://youtu.be/mDYqT0_9VR4\",\n    \"gamePlayYouTubeUrl\": \"https://youtu.be/p4QG59y6FGE\",\n    \"createdAt\": \"2022-07-05T20:45:13.269Z\",\n    \"updatedAt\": \"2022-07-05T20:45:13.270Z\"\n  },\n  {\n    \"id\": \"e5299870-f3f0-49a1-9dc5-76c0ad237559\",\n    \"title\": \"Super Mario World\",\n    \"genre\": \"Adventure\",\n    \"description\": \"A game is ...\",\n    \"year\": 1992,\n    \"image\": \"https://upload.wikimedia.org/wikipedia/pt/thumb/8/83/Donkey_Kong_Country_capa.png/270px-Donkey_Kong_Country_capa.png\",\n    \"imdbScore\": 5,\n    \"trailerYouTubeUrl\": \"https://youtu.be/mDYqT0_9VR4\",\n    \"gamePlayYouTubeUrl\": \"https://youtu.be/p4QG59y6FGE\",\n    \"createdAt\": \"2022-07-05T20:46:36.640Z\",\n    \"updatedAt\": \"2022-07-05T20:46:36.641Z\"\n  },\n  {\n    \"id\": \"a7b1577e-47aa-4f38-b183-f4d7f518ae3e\",\n    \"title\": \"Killer Instinct\",\n    \"genre\": \"Fight\",\n    \"description\": \"A game is ...\",\n    \"year\": 1994,\n    \"image\": \"https://upload.wikimedia.org/wikipedia/pt/thumb/8/83/Donkey_Kong_Country_capa.png/270px-Donkey_Kong_Country_capa.png\",\n    \"imdbScore\": 5,\n    \"trailerYouTubeUrl\": \"https://youtu.be/mDYqT0_9VR4\",\n    \"gamePlayYouTubeUrl\": \"https://youtu.be/p4QG59y6FGE\",\n    \"createdAt\": \"2022-07-05T20:50:03.368Z\",\n    \"updatedAt\": \"2022-07-05T20:50:03.369Z\"\n  },\n  {\n    \"id\": \"0be696ad-ce00-4d66-980d-cc00b5ec602c\",\n    \"title\": \"Street Fighter II\",\n    \"genre\": \"Fight\",\n    \"description\": \"A game is ...\",\n    \"year\": 1991,\n    \"image\": \"https://upload.wikimedia.org/wikipedia/pt/thumb/8/83/Donkey_Kong_Country_capa.png/270px-Donkey_Kong_Country_capa.png\",\n    \"imdbScore\": 5,\n    \"trailerYouTubeUrl\": \"https://youtu.be/mDYqT0_9VR4\",\n    \"gamePlayYouTubeUrl\": \"https://youtu.be/p4QG59y6FGE\",\n    \"createdAt\": \"2022-07-05T20:51:25.174Z\",\n    \"updatedAt\": \"2022-07-05T20:51:25.174Z\"\n  }\n]\n                    \n                \n\n\n        \n    \n\n    src/auth/logged-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LoggedUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((_, ctx: ExecutionContext) => {\n  const request = ctx.switchToHttp().getRequest();\n  const user = request.user;\n\n  delete user.password;\n  return user;\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
